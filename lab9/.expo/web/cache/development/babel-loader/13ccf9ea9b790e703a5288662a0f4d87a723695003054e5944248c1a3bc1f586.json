{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar Stopwatch = function Stopwatch(_ref) {\n  var isRunning = _ref.isRunning;\n  var _useState = useState(0),\n    _useState2 = _slicedToArray(_useState, 2),\n    timer = _useState2[0],\n    setTimer = _useState2[1];\n  useEffect(function () {\n    var interval;\n    if (isRunning) {\n      interval = setInterval(function () {\n        setTimer(function (prevTimer) {\n          return prevTimer + 1000;\n        });\n      }, 1000);\n    } else {\n      clearInterval(interval);\n    }\n    return function () {\n      return clearInterval(interval);\n    };\n  }, [isRunning]);\n  var formatTime = function formatTime(time) {\n    var minutes = Math.floor(time / (1000 * 60)).toString().padStart(2, '0');\n    var seconds = Math.floor(time % (1000 * 60) / 1000).toString().padStart(2, '0');\n    return `${minutes}:${seconds}`;\n  };\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsx(Text, {\n      style: styles.timer,\n      children: formatTime(timer)\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  timer: {\n    fontSize: 48\n  }\n});\nexport default Stopwatch;","map":{"version":3,"names":["React","useState","useEffect","View","Text","Button","StyleSheet","jsx","_jsx","Stopwatch","_ref","isRunning","_useState","_useState2","_slicedToArray","timer","setTimer","interval","setInterval","prevTimer","clearInterval","formatTime","time","minutes","Math","floor","toString","padStart","seconds","style","styles","container","children","create","justifyContent","alignItems","fontSize"],"sources":["/Users/savannahtaverner/github/unit2-2/lab9/components/StopWatch.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { View, Text, Button, StyleSheet } from 'react-native';\n\nconst Stopwatch = ({ isRunning }) => {\n  const [timer, setTimer] = useState(0);\n\n  useEffect(() => {\n    let interval;\n    if (isRunning) {\n      interval = setInterval(() => {\n        setTimer((prevTimer) => prevTimer + 1000); // Update timer every second\n      }, 1000);\n    } else {\n      clearInterval(interval);\n    }\n\n    return () => clearInterval(interval); // Cleanup interval on unmount or when isRunning changes\n  }, [isRunning]);\n\n  const formatTime = (time) => {\n    const minutes = Math.floor(time / (1000 * 60)).toString().padStart(2, '0');\n    const seconds = Math.floor((time % (1000 * 60)) / 1000).toString().padStart(2, '0');\n    return `${minutes}:${seconds}`;\n  };\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.timer}>{formatTime(timer)}</Text>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  timer: {\n    fontSize: 48,\n  },\n});\n\nexport default Stopwatch;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,MAAA;AAAA,OAAAC,UAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAGnD,IAAMC,SAAS,GAAG,SAAZA,SAASA,CAAAC,IAAA,EAAsB;EAAA,IAAhBC,SAAS,GAAAD,IAAA,CAATC,SAAS;EAC5B,IAAAC,SAAA,GAA0BX,QAAQ,CAAC,CAAC,CAAC;IAAAY,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA9BG,KAAK,GAAAF,UAAA;IAAEG,QAAQ,GAAAH,UAAA;EAEtBX,SAAS,CAAC,YAAM;IACd,IAAIe,QAAQ;IACZ,IAAIN,SAAS,EAAE;MACbM,QAAQ,GAAGC,WAAW,CAAC,YAAM;QAC3BF,QAAQ,CAAC,UAACG,SAAS;UAAA,OAAKA,SAAS,GAAG,IAAI;QAAA,EAAC;MAC3C,CAAC,EAAE,IAAI,CAAC;IACV,CAAC,MAAM;MACLC,aAAa,CAACH,QAAQ,CAAC;IACzB;IAEA,OAAO;MAAA,OAAMG,aAAa,CAACH,QAAQ,CAAC;IAAA;EACtC,CAAC,EAAE,CAACN,SAAS,CAAC,CAAC;EAEf,IAAMU,UAAU,GAAG,SAAbA,UAAUA,CAAIC,IAAI,EAAK;IAC3B,IAAMC,OAAO,GAAGC,IAAI,CAACC,KAAK,CAACH,IAAI,IAAI,IAAI,GAAG,EAAE,CAAC,CAAC,CAACI,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;IAC1E,IAAMC,OAAO,GAAGJ,IAAI,CAACC,KAAK,CAAEH,IAAI,IAAI,IAAI,GAAG,EAAE,CAAC,GAAI,IAAI,CAAC,CAACI,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;IACnF,OAAQ,GAAEJ,OAAQ,IAAGK,OAAQ,EAAC;EAChC,CAAC;EAED,OACEpB,IAAA,CAACL,IAAI;IAAC0B,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,EAC5BxB,IAAA,CAACJ,IAAI;MAACyB,KAAK,EAAEC,MAAM,CAACf,KAAM;MAAAiB,QAAA,EAAEX,UAAU,CAACN,KAAK;IAAC,CAAO;EAAC,CACjD,CAAC;AAEX,CAAC;AAED,IAAMe,MAAM,GAAGxB,UAAU,CAAC2B,MAAM,CAAC;EAC/BF,SAAS,EAAE;IACTG,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE;EACd,CAAC;EACDpB,KAAK,EAAE;IACLqB,QAAQ,EAAE;EACZ;AACF,CAAC,CAAC;AAEF,eAAe3B,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}