{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Stopwatch from \"./Stopwatch\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar DurationExercise = function DurationExercise(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isRunning = _useState2[0],\n    setIsRunning = _useState2[1];\n  var _useState3 = useState(0),\n    _useState4 = _slicedToArray(_useState3, 2),\n    timer = _useState4[0],\n    setTimer = _useState4[1];\n  var handleStartStop = function handleStartStop() {\n    setIsRunning(!isRunning);\n    if (!isRunning) {\n      var startTime = Date.now() - timer;\n      var interval = setInterval(function () {\n        setTimer(Date.now() - startTime);\n      }, 10);\n      return function () {\n        return clearInterval(interval);\n      };\n    }\n  };\n  var handleReset = function handleReset() {\n    setIsRunning(false);\n    setTimer(0);\n  };\n  var formatTime = function formatTime(time) {\n    var minutes = Math.floor(time / (1000 * 60)).toString().padStart(2, '0');\n    var seconds = Math.floor(time % (1000 * 60) / 1000).toString().padStart(2, '0');\n    var milliseconds = Math.floor(time % 1000 / 10).toString().padStart(2, '0');\n    return `${minutes}:${seconds}:${milliseconds}`;\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.title,\n      children: \"Duration Exercise\"\n    }), _jsx(Stopwatch, {\n      isRunning: isRunning,\n      timer: timer\n    }), _jsxs(View, {\n      style: styles.buttonContainer,\n      children: [_jsx(Button, {\n        title: isRunning ? 'Stop' : 'Start',\n        onPress: handleStartStop\n      }), _jsx(Button, {\n        title: \"Reset\",\n        onPress: handleReset\n      }), _jsx(Button, {\n        title: \"Home\",\n        onPress: function onPress() {\n          return navigation.navigate('Home');\n        }\n      })]\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  title: {\n    fontSize: 24,\n    marginBottom: 20\n  },\n  buttonContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-evenly',\n    marginTop: 20,\n    width: '100%'\n  }\n});\nexport default DurationExercise;","map":{"version":3,"names":["React","useState","View","Text","Button","StyleSheet","Stopwatch","jsx","_jsx","jsxs","_jsxs","DurationExercise","_ref","navigation","_useState","_useState2","_slicedToArray","isRunning","setIsRunning","_useState3","_useState4","timer","setTimer","handleStartStop","startTime","Date","now","interval","setInterval","clearInterval","handleReset","formatTime","time","minutes","Math","floor","toString","padStart","seconds","milliseconds","style","styles","container","children","title","buttonContainer","onPress","navigate","create","flex","justifyContent","alignItems","fontSize","marginBottom","flexDirection","marginTop","width"],"sources":["/Users/savannahtaverner/github/unit2-2/lab9/components/DurationExercise.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { View, Text, Button, StyleSheet } from 'react-native';\nimport Stopwatch from './Stopwatch';\n\nconst DurationExercise = ({ navigation }) => {\n  const [isRunning, setIsRunning] = useState(false);\n  const [timer, setTimer] = useState(0);\n\n  const handleStartStop = () => {\n    setIsRunning(!isRunning);\n    if (!isRunning) {\n      const startTime = Date.now() - timer;\n      const interval = setInterval(() => {\n        setTimer(Date.now() - startTime);\n      }, 10); // Update timer every 10 milliseconds\n      return () => clearInterval(interval); // Cleanup interval on unmount or when isRunning changes\n    }\n  };\n\n  const handleReset = () => {\n    setIsRunning(false);\n    setTimer(0);\n  };\n\n  const formatTime = (time) => {\n    const minutes = Math.floor(time / (1000 * 60)).toString().padStart(2, '0');\n    const seconds = Math.floor((time % (1000 * 60)) / 1000).toString().padStart(2, '0');\n    const milliseconds = Math.floor((time % 1000) / 10).toString().padStart(2, '0'); // Adjust milliseconds format\n    return `${minutes}:${seconds}:${milliseconds}`;\n  };\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>Duration Exercise</Text>\n      <Stopwatch isRunning={isRunning} timer={timer} />\n      <View style={styles.buttonContainer}>\n        <Button\n          title={isRunning ? 'Stop' : 'Start'}\n          onPress={handleStartStop}\n        />\n        <Button\n          title=\"Reset\"\n          onPress={handleReset}\n        />\n        <Button\n          title=\"Home\"\n          onPress={() => navigation.navigate('Home')}\n        />\n      </View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  title: {\n    fontSize: 24,\n    marginBottom: 20,\n  },\n  buttonContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-evenly',\n    marginTop: 20,\n    width: '100%',\n  },\n});\n\nexport default DurationExercise;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}