{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stopwatch = function Stopwatch(_ref) {\n  var isRunning = _ref.isRunning,\n    onReset = _ref.onReset;\n  var _useState = useState(0),\n    _useState2 = _slicedToArray(_useState, 2),\n    timer = _useState2[0],\n    setTimer = _useState2[1];\n  useEffect(function () {\n    var interval;\n    if (isRunning) {\n      interval = setInterval(function () {\n        setTimer(function (prevTimer) {\n          return prevTimer + 10;\n        });\n      }, 10);\n    } else {\n      clearInterval(interval);\n    }\n    return function () {\n      return clearInterval(interval);\n    };\n  }, [isRunning]);\n  console.log('Timer:', timer);\n  var formatTime = function formatTime(time) {\n    var milliseconds = Math.floor(time % 1000).toString().padStart(3, '0');\n    var seconds = Math.floor(time / 1000 % 60).toString().padStart(2, '0');\n    var minutes = Math.floor(time / (1000 * 60) % 60).toString().padStart(2, '0');\n    return `${minutes}:${seconds}:${milliseconds}`;\n  };\n  var handleReset = function handleReset() {\n    setTimer(0);\n    if (typeof onReset === 'function') {\n      onReset();\n    }\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.timer,\n      children: formatTime(timer)\n    }), isRunning && timer > 0 ? _jsx(Button, {\n      title: \"Reset\",\n      onPress: handleReset\n    }) : null]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  timer: {\n    fontSize: 48\n  }\n});\nexport default Stopwatch;","map":{"version":3,"names":["React","useState","useEffect","View","Text","Button","StyleSheet","jsx","_jsx","jsxs","_jsxs","Stopwatch","_ref","isRunning","onReset","_useState","_useState2","_slicedToArray","timer","setTimer","interval","setInterval","prevTimer","clearInterval","console","log","formatTime","time","milliseconds","Math","floor","toString","padStart","seconds","minutes","handleReset","style","styles","container","children","title","onPress","create","justifyContent","alignItems","fontSize"],"sources":["/Users/savannahtaverner/github/unit2-2/lab9/components/StopWatch.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { View, Text, Button, StyleSheet } from 'react-native';\n\nconst Stopwatch = ({ isRunning, onReset }) => {\n  const [timer, setTimer] = useState(0);\n\n  useEffect(() => {\n    let interval;\n    if (isRunning) {\n      interval = setInterval(() => {\n        setTimer((prevTimer) => prevTimer + 10); // Update timer every 10 milliseconds\n      }, 10);\n    } else {\n      clearInterval(interval);\n    }\n\n    return () => clearInterval(interval); // Cleanup interval on unmount or when isRunning changes\n  }, [isRunning]);\n\n  // Log timer value to check if it's changing\n  console.log('Timer:', timer);\n\n  const formatTime = (time) => {\n    const milliseconds = Math.floor(time % 1000).toString().padStart(3, '0');\n    const seconds = Math.floor((time / 1000) % 60).toString().padStart(2, '0');\n    const minutes = Math.floor((time / (1000 * 60)) % 60).toString().padStart(2, '0');\n    return `${minutes}:${seconds}:${milliseconds}`;\n  };\n\n  const handleReset = () => {\n    setTimer(0); // Reset timer to zero\n    if (typeof onReset === 'function') {\n      onReset(); // Call the onReset callback if provided\n    }\n  };\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.timer}>{formatTime(timer)}</Text>\n      {isRunning && timer > 0 ? ( // Render reset button only if timer is running and timer > 0\n        <Button title=\"Reset\" onPress={handleReset} />\n      ) : null}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  timer: {\n    fontSize: 48,\n  },\n});\n\nexport default Stopwatch;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,MAAA;AAAA,OAAAC,UAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAGnD,IAAMC,SAAS,GAAG,SAAZA,SAASA,CAAAC,IAAA,EAA+B;EAAA,IAAzBC,SAAS,GAAAD,IAAA,CAATC,SAAS;IAAEC,OAAO,GAAAF,IAAA,CAAPE,OAAO;EACrC,IAAAC,SAAA,GAA0Bd,QAAQ,CAAC,CAAC,CAAC;IAAAe,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA9BG,KAAK,GAAAF,UAAA;IAAEG,QAAQ,GAAAH,UAAA;EAEtBd,SAAS,CAAC,YAAM;IACd,IAAIkB,QAAQ;IACZ,IAAIP,SAAS,EAAE;MACbO,QAAQ,GAAGC,WAAW,CAAC,YAAM;QAC3BF,QAAQ,CAAC,UAACG,SAAS;UAAA,OAAKA,SAAS,GAAG,EAAE;QAAA,EAAC;MACzC,CAAC,EAAE,EAAE,CAAC;IACR,CAAC,MAAM;MACLC,aAAa,CAACH,QAAQ,CAAC;IACzB;IAEA,OAAO;MAAA,OAAMG,aAAa,CAACH,QAAQ,CAAC;IAAA;EACtC,CAAC,EAAE,CAACP,SAAS,CAAC,CAAC;EAGfW,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEP,KAAK,CAAC;EAE5B,IAAMQ,UAAU,GAAG,SAAbA,UAAUA,CAAIC,IAAI,EAAK;IAC3B,IAAMC,YAAY,GAAGC,IAAI,CAACC,KAAK,CAACH,IAAI,GAAG,IAAI,CAAC,CAACI,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;IACxE,IAAMC,OAAO,GAAGJ,IAAI,CAACC,KAAK,CAAEH,IAAI,GAAG,IAAI,GAAI,EAAE,CAAC,CAACI,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;IAC1E,IAAME,OAAO,GAAGL,IAAI,CAACC,KAAK,CAAEH,IAAI,IAAI,IAAI,GAAG,EAAE,CAAC,GAAI,EAAE,CAAC,CAACI,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;IACjF,OAAQ,GAAEE,OAAQ,IAAGD,OAAQ,IAAGL,YAAa,EAAC;EAChD,CAAC;EAED,IAAMO,WAAW,GAAG,SAAdA,WAAWA,CAAA,EAAS;IACxBhB,QAAQ,CAAC,CAAC,CAAC;IACX,IAAI,OAAOL,OAAO,KAAK,UAAU,EAAE;MACjCA,OAAO,CAAC,CAAC;IACX;EACF,CAAC;EAED,OACEJ,KAAA,CAACP,IAAI;IAACiC,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,GAC5B/B,IAAA,CAACJ,IAAI;MAACgC,KAAK,EAAEC,MAAM,CAACnB,KAAM;MAAAqB,QAAA,EAAEb,UAAU,CAACR,KAAK;IAAC,CAAO,CAAC,EACpDL,SAAS,IAAIK,KAAK,GAAG,CAAC,GACrBV,IAAA,CAACH,MAAM;MAACmC,KAAK,EAAC,OAAO;MAACC,OAAO,EAAEN;IAAY,CAAE,CAAC,GAC5C,IAAI;EAAA,CACJ,CAAC;AAEX,CAAC;AAED,IAAME,MAAM,GAAG/B,UAAU,CAACoC,MAAM,CAAC;EAC/BJ,SAAS,EAAE;IACTK,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE;EACd,CAAC;EACD1B,KAAK,EAAE;IACL2B,QAAQ,EAAE;EACZ;AACF,CAAC,CAAC;AAEF,eAAelC,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}