{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useRef } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Stopwatch from \"./StopWatch\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar DurationExercise = function DurationExercise(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isRunning = _useState2[0],\n    setIsRunning = _useState2[1];\n  var _useState3 = useState(0),\n    _useState4 = _slicedToArray(_useState3, 2),\n    elapsedTime = _useState4[0],\n    setElapsedTime = _useState4[1];\n  var intervalRef = useRef();\n  var handleStartStop = function handleStartStop() {\n    if (isRunning) {\n      clearInterval(intervalRef.current);\n    } else {\n      var startTime = Date.now() - elapsedTime;\n      intervalRef.current = setInterval(function () {\n        setElapsedTime(Date.now() - startTime);\n      }, 100);\n    }\n    setIsRunning(!isRunning);\n  };\n  var handleReset = function handleReset() {\n    clearInterval(intervalRef.current);\n    setIsRunning(false);\n    setElapsedTime(0);\n  };\n  return _jsxs(View, {\n    children: [_jsx(Text, {\n      children: \"Duration Exercise Screen\"\n    }), _jsx(Stopwatch, {\n      elapsedTime: elapsedTime\n    }), _jsx(Button, {\n      title: isRunning ? 'Stop' : 'Start',\n      onPress: handleStartStop\n    }), _jsx(Button, {\n      title: \"Reset\",\n      onPress: handleReset\n    })]\n  });\n};\nexport default DurationExercise;","map":{"version":3,"names":["React","useState","useRef","View","Text","Button","Stopwatch","jsx","_jsx","jsxs","_jsxs","DurationExercise","_ref","navigation","_useState","_useState2","_slicedToArray","isRunning","setIsRunning","_useState3","_useState4","elapsedTime","setElapsedTime","intervalRef","handleStartStop","clearInterval","current","startTime","Date","now","setInterval","handleReset","children","title","onPress"],"sources":["/Users/savannahtaverner/github/unit2-2/lab9/components/DurationExercise.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\nimport { View, Text, Button } from 'react-native';\nimport Stopwatch from './StopWatch'; // Adjust the import path if necessary\n\nconst DurationExercise = ({ navigation }) => {\n  const [isRunning, setIsRunning] = useState(false);\n  const [elapsedTime, setElapsedTime] = useState(0);\n  const intervalRef = useRef();\n\n  const handleStartStop = () => {\n    if (isRunning) {\n      clearInterval(intervalRef.current);\n    } else {\n      const startTime = Date.now() - elapsedTime;\n      intervalRef.current = setInterval(() => {\n        setElapsedTime(Date.now() - startTime);\n      }, 100);\n    }\n    setIsRunning(!isRunning);\n  };\n\n  const handleReset = () => {\n    clearInterval(intervalRef.current);\n    setIsRunning(false);\n    setElapsedTime(0);\n  };\n\n  return (\n    <View>\n      <Text>Duration Exercise Screen</Text>\n      <Stopwatch elapsedTime={elapsedTime} />\n      <Button\n        title={isRunning ? 'Stop' : 'Start'}\n        onPress={handleStartStop}\n      />\n      <Button\n        title=\"Reset\"\n        onPress={handleReset}\n      />\n    </View>\n  );\n};\n\nexport default DurationExercise;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,MAAA;AAEhD,OAAOC,SAAS;AAAoB,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEpC,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAAC,IAAA,EAAuB;EAAA,IAAjBC,UAAU,GAAAD,IAAA,CAAVC,UAAU;EACpC,IAAAC,SAAA,GAAkCb,QAAQ,CAAC,KAAK,CAAC;IAAAc,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA1CG,SAAS,GAAAF,UAAA;IAAEG,YAAY,GAAAH,UAAA;EAC9B,IAAAI,UAAA,GAAsClB,QAAQ,CAAC,CAAC,CAAC;IAAAmB,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAA1CE,WAAW,GAAAD,UAAA;IAAEE,cAAc,GAAAF,UAAA;EAClC,IAAMG,WAAW,GAAGrB,MAAM,CAAC,CAAC;EAE5B,IAAMsB,eAAe,GAAG,SAAlBA,eAAeA,CAAA,EAAS;IAC5B,IAAIP,SAAS,EAAE;MACbQ,aAAa,CAACF,WAAW,CAACG,OAAO,CAAC;IACpC,CAAC,MAAM;MACL,IAAMC,SAAS,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,GAAGR,WAAW;MAC1CE,WAAW,CAACG,OAAO,GAAGI,WAAW,CAAC,YAAM;QACtCR,cAAc,CAACM,IAAI,CAACC,GAAG,CAAC,CAAC,GAAGF,SAAS,CAAC;MACxC,CAAC,EAAE,GAAG,CAAC;IACT;IACAT,YAAY,CAAC,CAACD,SAAS,CAAC;EAC1B,CAAC;EAED,IAAMc,WAAW,GAAG,SAAdA,WAAWA,CAAA,EAAS;IACxBN,aAAa,CAACF,WAAW,CAACG,OAAO,CAAC;IAClCR,YAAY,CAAC,KAAK,CAAC;IACnBI,cAAc,CAAC,CAAC,CAAC;EACnB,CAAC;EAED,OACEZ,KAAA,CAACP,IAAI;IAAA6B,QAAA,GACHxB,IAAA,CAACJ,IAAI;MAAA4B,QAAA,EAAC;IAAwB,CAAM,CAAC,EACrCxB,IAAA,CAACF,SAAS;MAACe,WAAW,EAAEA;IAAY,CAAE,CAAC,EACvCb,IAAA,CAACH,MAAM;MACL4B,KAAK,EAAEhB,SAAS,GAAG,MAAM,GAAG,OAAQ;MACpCiB,OAAO,EAAEV;IAAgB,CAC1B,CAAC,EACFhB,IAAA,CAACH,MAAM;MACL4B,KAAK,EAAC,OAAO;MACbC,OAAO,EAAEH;IAAY,CACtB,CAAC;EAAA,CACE,CAAC;AAEX,CAAC;AAED,eAAepB,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}