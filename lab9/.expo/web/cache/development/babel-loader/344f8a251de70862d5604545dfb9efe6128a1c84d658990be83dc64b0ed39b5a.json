{"ast":null,"code":"export * from \"./types\";\nexport { enableScreens, enableFreeze, screensEnabled, freezeEnabled, shouldUseActivityState } from \"./core\";\nexport { default as Screen, NativeScreen, InnerScreen, ScreenContext } from \"./components/Screen\";\nexport { default as ScreenContainer, NativeScreenContainer, NativeScreenNavigationContainer } from \"./components/ScreenContainer\";\nexport { default as ScreenStack } from \"./components/ScreenStack\";\nexport { ScreenStackHeaderConfig, ScreenStackHeaderSubview, ScreenStackHeaderLeftView, ScreenStackHeaderCenterView, ScreenStackHeaderRightView, ScreenStackHeaderBackButtonImage, ScreenStackHeaderSearchBarView } from \"./components/ScreenStackHeaderConfig\";\nexport { default as SearchBar, NativeSearchBar, NativeSearchBarCommands } from \"./components/SearchBar\";\nexport { default as FullWindowOverlay } from \"./components/FullWindowOverlay\";\nexport { default as NativeScreensModule } from \"./fabric/NativeScreensModule\";\nexport { GHContext } from \"./native-stack/contexts/GHContext\";\nexport { isSearchBarAvailableForCurrentPlatform, isNewBackTitleImplementation, executeNativeBackPress } from \"./utils\";\nexport { default as useTransitionProgress } from \"./useTransitionProgress\";","map":{"version":3,"names":["enableScreens","enableFreeze","screensEnabled","freezeEnabled","shouldUseActivityState","default","Screen","NativeScreen","InnerScreen","ScreenContext","ScreenContainer","NativeScreenContainer","NativeScreenNavigationContainer","ScreenStack","ScreenStackHeaderConfig","ScreenStackHeaderSubview","ScreenStackHeaderLeftView","ScreenStackHeaderCenterView","ScreenStackHeaderRightView","ScreenStackHeaderBackButtonImage","ScreenStackHeaderSearchBarView","SearchBar","NativeSearchBar","NativeSearchBarCommands","FullWindowOverlay","NativeScreensModule","GHContext","isSearchBarAvailableForCurrentPlatform","isNewBackTitleImplementation","executeNativeBackPress","useTransitionProgress"],"sources":["/Users/savannahtaverner/github/unit2-2/node_modules/react-native-screens/src/index.tsx"],"sourcesContent":["export * from './types';\n\n/*\n * Core\n */\nexport {\n  enableScreens,\n  enableFreeze,\n  screensEnabled,\n  freezeEnabled,\n  shouldUseActivityState,\n} from './core';\n\n/*\n * RNS Components\n */\nexport {\n  default as Screen,\n  NativeScreen,\n  InnerScreen,\n  ScreenContext,\n} from './components/Screen';\n\nexport {\n  default as ScreenContainer,\n  NativeScreenContainer,\n  NativeScreenNavigationContainer,\n} from './components/ScreenContainer';\n\nexport { default as ScreenStack } from './components/ScreenStack';\n\nexport {\n  ScreenStackHeaderConfig,\n  ScreenStackHeaderSubview,\n  ScreenStackHeaderLeftView,\n  ScreenStackHeaderCenterView,\n  ScreenStackHeaderRightView,\n  ScreenStackHeaderBackButtonImage,\n  ScreenStackHeaderSearchBarView,\n} from './components/ScreenStackHeaderConfig';\n\nexport {\n  default as SearchBar,\n  NativeSearchBar,\n  NativeSearchBarCommands,\n} from './components/SearchBar';\n\nexport { default as FullWindowOverlay } from './components/FullWindowOverlay';\n\n/*\n * Modules\n */\nexport { default as NativeScreensModule } from './fabric/NativeScreensModule';\n\n/*\n * Contexts\n */\nexport { GHContext } from './native-stack/contexts/GHContext';\n\n/*\n * Utils\n */\nexport {\n  isSearchBarAvailableForCurrentPlatform,\n  isNewBackTitleImplementation,\n  executeNativeBackPress,\n} from './utils';\n\n/*\n * Hooks\n */\nexport { default as useTransitionProgress } from './useTransitionProgress';\n"],"mappings":"AAAA;AAKA,SACEA,aAAa,EACbC,YAAY,EACZC,cAAc,EACdC,aAAa,EACbC,sBAAsB;AAMxB,SACEC,OAAO,IAAIC,MAAM,EACjBC,YAAY,EACZC,WAAW,EACXC,aAAa;AAGf,SACEJ,OAAO,IAAIK,eAAe,EAC1BC,qBAAqB,EACrBC,+BAA+B;AAGjC,SAASP,OAAO,IAAIQ,WAAW;AAE/B,SACEC,uBAAuB,EACvBC,wBAAwB,EACxBC,yBAAyB,EACzBC,2BAA2B,EAC3BC,0BAA0B,EAC1BC,gCAAgC,EAChCC,8BAA8B;AAGhC,SACEf,OAAO,IAAIgB,SAAS,EACpBC,eAAe,EACfC,uBAAuB;AAGzB,SAASlB,OAAO,IAAImB,iBAAiB;AAKrC,SAASnB,OAAO,IAAIoB,mBAAmB;AAKvC,SAASC,SAAS;AAKlB,SACEC,sCAAsC,EACtCC,4BAA4B,EAC5BC,sBAAsB;AAMxB,SAASxB,OAAO,IAAIyB,qBAAqB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}