{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar DurationExercise = function DurationExercise(_ref) {\n  var navigation = _ref.navigation,\n    route = _ref.route;\n  var name = route.params.name;\n  var _useState = useState(0),\n    _useState2 = _slicedToArray(_useState, 2),\n    timer = _useState2[0],\n    setTimer = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    isRunning = _useState4[0],\n    setIsRunning = _useState4[1];\n  useEffect(function () {\n    var interval;\n    if (isRunning) {\n      interval = setInterval(function () {\n        setTimer(function (prevTimer) {\n          return prevTimer + 1000;\n        });\n      }, 1000);\n    } else {\n      clearInterval(interval);\n    }\n    return function () {\n      return clearInterval(interval);\n    };\n  }, [isRunning]);\n  var startTimer = function startTimer() {\n    setIsRunning(true);\n  };\n  var stopTimer = function stopTimer() {\n    setIsRunning(false);\n  };\n  var resetTimer = function resetTimer() {\n    setTimer(0);\n    setIsRunning(false);\n  };\n  return _jsxs(View, {\n    children: [_jsx(Text, {\n      children: name\n    }), _jsxs(Text, {\n      children: [\"Timer: \", formatTime(timer)]\n    }), _jsx(Button, {\n      title: \"Start\",\n      onPress: startTimer\n    }), _jsx(Button, {\n      title: \"Stop\",\n      onPress: stopTimer\n    }), _jsx(Button, {\n      title: \"Reset\",\n      onPress: resetTimer\n    })]\n  });\n};\nvar formatTime = function formatTime(milliseconds) {\n  var seconds = Math.floor(milliseconds / 1000 % 60);\n  var minutes = Math.floor(milliseconds / (1000 * 60) % 60);\n  var hours = Math.floor(milliseconds / (1000 * 60 * 60) % 24);\n  var pad = function pad(num) {\n    return num < 10 ? '0' + num : num;\n  };\n  return `${pad(hours)}:${pad(minutes)}:${pad(seconds)}`;\n};\nexport default DurationExercise;","map":{"version":3,"names":["React","useState","useEffect","View","Text","Button","jsx","_jsx","jsxs","_jsxs","DurationExercise","_ref","navigation","route","name","params","_useState","_useState2","_slicedToArray","timer","setTimer","_useState3","_useState4","isRunning","setIsRunning","interval","setInterval","prevTimer","clearInterval","startTimer","stopTimer","resetTimer","children","formatTime","title","onPress","milliseconds","seconds","Math","floor","minutes","hours","pad","num"],"sources":["/Users/savannahtaverner/github/unit2-2/lab9/components/DurationExercise.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { View, Text, Button } from 'react-native';\n\nconst DurationExercise = ({ navigation, route }) => {\n  const { name } = route.params;\n\n  const [timer, setTimer] = useState(0);\n  const [isRunning, setIsRunning] = useState(false);\n\n  useEffect(() => {\n    let interval;\n    if (isRunning) {\n      interval = setInterval(() => {\n        setTimer((prevTimer) => prevTimer + 1000); // Increment timer every second\n      }, 1000);\n    } else {\n      clearInterval(interval); // Clear interval when timer stops\n    }\n\n    return () => clearInterval(interval); // Cleanup on unmount or re-render\n  }, [isRunning]);\n\n  const startTimer = () => {\n    setIsRunning(true);\n  };\n\n  const stopTimer = () => {\n    setIsRunning(false);\n  };\n\n  const resetTimer = () => {\n    setTimer(0);\n    setIsRunning(false);\n  };\n\n  return (\n    <View>\n      <Text>{name}</Text>\n      <Text>Timer: {formatTime(timer)}</Text>\n      <Button title=\"Start\" onPress={startTimer} />\n      <Button title=\"Stop\" onPress={stopTimer} />\n      <Button title=\"Reset\" onPress={resetTimer} />\n    </View>\n  );\n};\n\n// Helper function to format time in HH:MM:SS format\nconst formatTime = (milliseconds) => {\n  const seconds = Math.floor((milliseconds / 1000) % 60);\n  const minutes = Math.floor((milliseconds / (1000 * 60)) % 60);\n  const hours = Math.floor((milliseconds / (1000 * 60 * 60)) % 24);\n\n  const pad = (num) => (num < 10 ? '0' + num : num);\n\n  return `${pad(hours)}:${pad(minutes)}:${pad(seconds)}`;\n};\n\nexport default DurationExercise;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}