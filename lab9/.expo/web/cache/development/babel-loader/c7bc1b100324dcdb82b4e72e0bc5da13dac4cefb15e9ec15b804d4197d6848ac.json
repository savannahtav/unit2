{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React from \"react-native-web/dist/index\";\nimport { useState } from \"react-native-web/dist/index\";\nimport { useRef } from \"react-native-web/dist/index\";\nimport { useEffect } from \"react-native-web/dist/index\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function RunningExercise(_ref) {\n  var setMenuScreen = _ref.setMenuScreen;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    lapTimes = _useState2[0],\n    setLapTimes = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    timer = _useState4[0],\n    setTimer = _useState4[1];\n  var _useState5 = useState(0),\n    _useState6 = _slicedToArray(_useState5, 2),\n    hour = _useState6[0],\n    setHour = _useState6[1];\n  var _useState7 = useState(0),\n    _useState8 = _slicedToArray(_useState7, 2),\n    minute = _useState8[0],\n    setMinute = _useState8[1];\n  var _useState9 = useState(0),\n    _useState10 = _slicedToArray(_useState9, 2),\n    second = _useState10[0],\n    setSecond = _useState10[1];\n  var _useState11 = useState(0),\n    _useState12 = _slicedToArray(_useState11, 2),\n    count = _useState12[0],\n    setCount = _useState12[1];\n  var intervalRef = useRef();\n  var startTimer = function startTimer() {\n    if (!timer) {\n      intervalRef.current = setInterval(function () {\n        setCount(function (prevCount) {\n          return prevCount + 1;\n        });\n        setSecond(function (prevSecond) {\n          return prevSecond + 1;\n        });\n      }, 10);\n      setTimer(true);\n    }\n  };\n  var stopTimer = function stopTimer() {\n    clearInterval(intervalRef.current);\n    setTimer(false);\n  };\n  var resetTimer = function resetTimer() {\n    clearInterval(intervalRef.current);\n    setTimer(false);\n    setCount(0);\n    setHour(0);\n    setMinute(0);\n    setSecond(0);\n    setLapTimes([]);\n  };\n  var lapTimer = function lapTimer() {\n    setLapTimes(function (prevLapTimes) {\n      return [].concat(_toConsumableArray(prevLapTimes), [count]);\n    });\n  };\n  useEffect(function () {\n    var seconds = Math.floor(count / 100) % 60;\n    var minutes = Math.floor(count / (100 * 60)) % 60;\n    var hours = Math.floor(count / (100 * 60 * 60));\n    setSecond(seconds);\n    setMinute(minutes);\n    setHour(hours);\n  }, [count]);\n  useEffect(function () {\n    return function () {\n      return clearInterval(intervalRef.current);\n    };\n  }, []);\n  return _jsxs(View, {\n    children: [_jsx(Text, {\n      children: \"Running Exercise\"\n    }), _jsx(Text, {\n      children: `${hour}:${minute}:${second}`\n    }), _jsx(Button, {\n      title: timer ? 'Stop' : 'Start',\n      onPress: timer ? stopTimer : startTimer\n    }), _jsx(Button, {\n      title: \"Reset\",\n      onPress: resetTimer\n    }), _jsx(Button, {\n      title: \"Lap\",\n      onPress: lapTimer\n    }), _jsx(Button, {\n      title: \"Back to Menu\",\n      onPress: function onPress() {\n        return setMenuScreen(true);\n      }\n    }), _jsx(Text, {\n      children: \"Lap Times:\"\n    }), lapTimes.map(function (lapTime, index) {\n      return _jsx(Text, {\n        children: `Lap ${index + 1}: ${Math.floor(lapTime / 6000)}:${Math.floor(lapTime / 100 % 60)}:${Math.floor(lapTime % 100)}`\n      }, index);\n    })]\n  });\n}","map":{"version":3,"names":["React","useState","useRef","useEffect","View","Text","Button","jsx","_jsx","jsxs","_jsxs","RunningExercise","_ref","setMenuScreen","_useState","_useState2","_slicedToArray","lapTimes","setLapTimes","_useState3","_useState4","timer","setTimer","_useState5","_useState6","hour","setHour","_useState7","_useState8","minute","setMinute","_useState9","_useState10","second","setSecond","_useState11","_useState12","count","setCount","intervalRef","startTimer","current","setInterval","prevCount","prevSecond","stopTimer","clearInterval","resetTimer","lapTimer","prevLapTimes","concat","_toConsumableArray","seconds","Math","floor","minutes","hours","children","title","onPress","map","lapTime","index"],"sources":["/Users/savannahtaverner/github/unit2-2/lab9/components/RunningExercise.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react-native';\nimport { View, Text, Button } from 'react-native';\n\nexport default function RunningExercise({ setMenuScreen }) {\n  const [lapTimes, setLapTimes] = useState([]);\n  const [timer, setTimer] = useState(false);\n  const [hour, setHour] = useState(0);\n  const [minute, setMinute] = useState(0);\n  const [second, setSecond] = useState(0);\n  const [count, setCount] = useState(0);\n\n  const intervalRef = useRef();\n\n  const startTimer = () => {\n    if (!timer) {\n      intervalRef.current = setInterval(() => {\n        setCount(prevCount => prevCount + 1);\n        setSecond(prevSecond => prevSecond + 1);\n      }, 10);\n      setTimer(true);\n    }\n  };\n\n  const stopTimer = () => {\n    clearInterval(intervalRef.current);\n    setTimer(false);\n  };\n\n  const resetTimer = () => {\n    clearInterval(intervalRef.current);\n    setTimer(false);\n    setCount(0);\n    setHour(0);\n    setMinute(0);\n    setSecond(0);\n    setLapTimes([]);\n  };\n\n  const lapTimer = () => {\n    setLapTimes(prevLapTimes => [...prevLapTimes, count]);\n  };\n\n  useEffect(() => {\n    let seconds = Math.floor(count / 100) % 60;\n    let minutes = Math.floor(count / (100 * 60)) % 60;\n    let hours = Math.floor(count / (100 * 60 * 60));\n\n    setSecond(seconds);\n    setMinute(minutes);\n    setHour(hours);\n  }, [count]);\n\n  useEffect(() => {\n    return () => clearInterval(intervalRef.current);\n  }, []);\n\n  return (\n    <View>\n      <Text>Running Exercise</Text>\n      <Text>{`${hour}:${minute}:${second}`}</Text>\n      <Button title={timer ? 'Stop' : 'Start'} onPress={timer ? stopTimer : startTimer} />\n      <Button title=\"Reset\" onPress={resetTimer} />\n      <Button title=\"Lap\" onPress={lapTimer} />\n      <Button title=\"Back to Menu\" onPress={() => setMenuScreen(true)} />\n      <Text>Lap Times:</Text>\n      {lapTimes.map((lapTime, index) => (\n        <Text key={index}>{`Lap ${index + 1}: ${Math.floor(lapTime / 6000)}:${Math.floor((lapTime / 100) % 60)}:${Math.floor(lapTime % 100)}`}</Text>\n      ))}\n    </View>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}