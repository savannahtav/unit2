{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar DurationExercise = function DurationExercise(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isRunning = _useState2[0],\n    setIsRunning = _useState2[1];\n  var _useState3 = useState(0),\n    _useState4 = _slicedToArray(_useState3, 2),\n    timer = _useState4[0],\n    setTimer = _useState4[1];\n  useEffect(function () {\n    var interval;\n    if (isRunning) {\n      interval = setInterval(function () {\n        setTimer(function (prevTimer) {\n          return prevTimer + 1000;\n        });\n      }, 1000);\n    } else {\n      clearInterval(interval);\n    }\n    return function () {\n      return clearInterval(interval);\n    };\n  }, [isRunning]);\n  var formatTime = function formatTime(time) {\n    var hours = Math.floor(time / (1000 * 60 * 60)).toString().padStart(2, '0');\n    var minutes = Math.floor(time % (1000 * 60 * 60) / (1000 * 60)).toString().padStart(2, '0');\n    var seconds = Math.floor(time % (1000 * 60) / 1000).toString().padStart(2, '0');\n    return `${hours}:${minutes}:${seconds}`;\n  };\n  var startTimer = function startTimer() {\n    setIsRunning(true);\n  };\n  var stopTimer = function stopTimer() {\n    setIsRunning(false);\n  };\n  var resetTimer = function resetTimer() {\n    setIsRunning(false);\n    setTimer(0);\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.title,\n      children: \"Duration Exercise\"\n    }), _jsx(Text, {\n      style: styles.timer,\n      children: formatTime(timer)\n    }), _jsxs(View, {\n      style: styles.buttonContainer,\n      children: [_jsx(Button, {\n        title: isRunning ? 'Stop' : 'Start',\n        onPress: isRunning ? stopTimer : startTimer\n      }), _jsx(Button, {\n        title: \"Reset\",\n        onPress: resetTimer\n      }), _jsx(Button, {\n        title: \"Home\",\n        onPress: function onPress() {\n          return navigation.navigate('Home');\n        }\n      })]\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  title: {\n    fontSize: 24,\n    marginBottom: 20\n  },\n  timer: {\n    fontSize: 48,\n    marginBottom: 20\n  },\n  buttonContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-evenly',\n    marginTop: 20,\n    width: '100%'\n  }\n});\nexport default DurationExercise;","map":{"version":3,"names":["React","useState","useEffect","View","Text","Button","StyleSheet","jsx","_jsx","jsxs","_jsxs","DurationExercise","_ref","navigation","_useState","_useState2","_slicedToArray","isRunning","setIsRunning","_useState3","_useState4","timer","setTimer","interval","setInterval","prevTimer","clearInterval","formatTime","time","hours","Math","floor","toString","padStart","minutes","seconds","startTimer","stopTimer","resetTimer","style","styles","container","children","title","buttonContainer","onPress","navigate","create","flex","justifyContent","alignItems","fontSize","marginBottom","flexDirection","marginTop","width"],"sources":["/Users/savannahtaverner/github/unit2-2/lab9/components/DurationExercise.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { View, Text, Button, StyleSheet } from 'react-native';\n\nconst DurationExercise = ({ navigation }) => {\n  const [isRunning, setIsRunning] = useState(false);\n  const [timer, setTimer] = useState(0);\n\n  useEffect(() => {\n    let interval;\n    if (isRunning) {\n      interval = setInterval(() => {\n        setTimer((prevTimer) => prevTimer + 1000); // Update timer every second\n      }, 1000);\n    } else {\n      clearInterval(interval);\n    }\n\n    return () => clearInterval(interval); // Cleanup interval on unmount or when isRunning changes\n  }, [isRunning]);\n\n  const formatTime = (time) => {\n    const hours = Math.floor(time / (1000 * 60 * 60)).toString().padStart(2, '0');\n    const minutes = Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)).toString().padStart(2, '0');\n    const seconds = Math.floor((time % (1000 * 60)) / 1000).toString().padStart(2, '0');\n    return `${hours}:${minutes}:${seconds}`;\n  };\n\n  const startTimer = () => {\n    setIsRunning(true);\n  };\n\n  const stopTimer = () => {\n    setIsRunning(false);\n  };\n\n  const resetTimer = () => {\n    setIsRunning(false);\n    setTimer(0);\n  };\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>Duration Exercise</Text>\n      <Text style={styles.timer}>{formatTime(timer)}</Text>\n      <View style={styles.buttonContainer}>\n        <Button title={isRunning ? 'Stop' : 'Start'} onPress={isRunning ? stopTimer : startTimer} />\n        <Button title=\"Reset\" onPress={resetTimer} />\n        <Button title=\"Home\" onPress={() => navigation.navigate('Home')} />\n      </View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  title: {\n    fontSize: 24,\n    marginBottom: 20,\n  },\n  timer: {\n    fontSize: 48,\n    marginBottom: 20,\n  },\n  buttonContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-evenly',\n    marginTop: 20,\n    width: '100%',\n  },\n});\n\nexport default DurationExercise;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,MAAA;AAAA,OAAAC,UAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAGnD,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAAC,IAAA,EAAuB;EAAA,IAAjBC,UAAU,GAAAD,IAAA,CAAVC,UAAU;EACpC,IAAAC,SAAA,GAAkCb,QAAQ,CAAC,KAAK,CAAC;IAAAc,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA1CG,SAAS,GAAAF,UAAA;IAAEG,YAAY,GAAAH,UAAA;EAC9B,IAAAI,UAAA,GAA0BlB,QAAQ,CAAC,CAAC,CAAC;IAAAmB,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAA9BE,KAAK,GAAAD,UAAA;IAAEE,QAAQ,GAAAF,UAAA;EAEtBlB,SAAS,CAAC,YAAM;IACd,IAAIqB,QAAQ;IACZ,IAAIN,SAAS,EAAE;MACbM,QAAQ,GAAGC,WAAW,CAAC,YAAM;QAC3BF,QAAQ,CAAC,UAACG,SAAS;UAAA,OAAKA,SAAS,GAAG,IAAI;QAAA,EAAC;MAC3C,CAAC,EAAE,IAAI,CAAC;IACV,CAAC,MAAM;MACLC,aAAa,CAACH,QAAQ,CAAC;IACzB;IAEA,OAAO;MAAA,OAAMG,aAAa,CAACH,QAAQ,CAAC;IAAA;EACtC,CAAC,EAAE,CAACN,SAAS,CAAC,CAAC;EAEf,IAAMU,UAAU,GAAG,SAAbA,UAAUA,CAAIC,IAAI,EAAK;IAC3B,IAAMC,KAAK,GAAGC,IAAI,CAACC,KAAK,CAACH,IAAI,IAAI,IAAI,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,CAACI,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;IAC7E,IAAMC,OAAO,GAAGJ,IAAI,CAACC,KAAK,CAAEH,IAAI,IAAI,IAAI,GAAG,EAAE,GAAG,EAAE,CAAC,IAAK,IAAI,GAAG,EAAE,CAAC,CAAC,CAACI,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;IAC/F,IAAME,OAAO,GAAGL,IAAI,CAACC,KAAK,CAAEH,IAAI,IAAI,IAAI,GAAG,EAAE,CAAC,GAAI,IAAI,CAAC,CAACI,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;IACnF,OAAQ,GAAEJ,KAAM,IAAGK,OAAQ,IAAGC,OAAQ,EAAC;EACzC,CAAC;EAED,IAAMC,UAAU,GAAG,SAAbA,UAAUA,CAAA,EAAS;IACvBlB,YAAY,CAAC,IAAI,CAAC;EACpB,CAAC;EAED,IAAMmB,SAAS,GAAG,SAAZA,SAASA,CAAA,EAAS;IACtBnB,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC;EAED,IAAMoB,UAAU,GAAG,SAAbA,UAAUA,CAAA,EAAS;IACvBpB,YAAY,CAAC,KAAK,CAAC;IACnBI,QAAQ,CAAC,CAAC,CAAC;EACb,CAAC;EAED,OACEZ,KAAA,CAACP,IAAI;IAACoC,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,GAC5BlC,IAAA,CAACJ,IAAI;MAACmC,KAAK,EAAEC,MAAM,CAACG,KAAM;MAAAD,QAAA,EAAC;IAAiB,CAAM,CAAC,EACnDlC,IAAA,CAACJ,IAAI;MAACmC,KAAK,EAAEC,MAAM,CAACnB,KAAM;MAAAqB,QAAA,EAAEf,UAAU,CAACN,KAAK;IAAC,CAAO,CAAC,EACrDX,KAAA,CAACP,IAAI;MAACoC,KAAK,EAAEC,MAAM,CAACI,eAAgB;MAAAF,QAAA,GAClClC,IAAA,CAACH,MAAM;QAACsC,KAAK,EAAE1B,SAAS,GAAG,MAAM,GAAG,OAAQ;QAAC4B,OAAO,EAAE5B,SAAS,GAAGoB,SAAS,GAAGD;MAAW,CAAE,CAAC,EAC5F5B,IAAA,CAACH,MAAM;QAACsC,KAAK,EAAC,OAAO;QAACE,OAAO,EAAEP;MAAW,CAAE,CAAC,EAC7C9B,IAAA,CAACH,MAAM;QAACsC,KAAK,EAAC,MAAM;QAACE,OAAO,EAAE,SAAAA,QAAA;UAAA,OAAMhC,UAAU,CAACiC,QAAQ,CAAC,MAAM,CAAC;QAAA;MAAC,CAAE,CAAC;IAAA,CAC/D,CAAC;EAAA,CACH,CAAC;AAEX,CAAC;AAED,IAAMN,MAAM,GAAGlC,UAAU,CAACyC,MAAM,CAAC;EAC/BN,SAAS,EAAE;IACTO,IAAI,EAAE,CAAC;IACPC,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE;EACd,CAAC;EACDP,KAAK,EAAE;IACLQ,QAAQ,EAAE,EAAE;IACZC,YAAY,EAAE;EAChB,CAAC;EACD/B,KAAK,EAAE;IACL8B,QAAQ,EAAE,EAAE;IACZC,YAAY,EAAE;EAChB,CAAC;EACDR,eAAe,EAAE;IACfS,aAAa,EAAE,KAAK;IACpBJ,cAAc,EAAE,cAAc;IAC9BK,SAAS,EAAE,EAAE;IACbC,KAAK,EAAE;EACT;AACF,CAAC,CAAC;AAEF,eAAe5C,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}