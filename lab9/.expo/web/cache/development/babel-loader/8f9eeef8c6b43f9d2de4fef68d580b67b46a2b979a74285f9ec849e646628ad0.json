{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function DurationExercise(_ref) {\n  var exercise = _ref.exercise,\n    setMenuScreen = _ref.setMenuScreen;\n  var _useState = useState(0),\n    _useState2 = _slicedToArray(_useState, 2),\n    count = _useState2[0],\n    setCount = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    isRunning = _useState4[0],\n    setIsRunning = _useState4[1];\n  useEffect(function () {\n    var interval;\n    if (isRunning) {\n      interval = setInterval(function () {\n        setCount(function (prevCount) {\n          return prevCount + 1;\n        });\n      }, 1000);\n    } else {\n      clearInterval(interval);\n    }\n    return function () {\n      return clearInterval(interval);\n    };\n  }, [isRunning]);\n  var startExercise = function startExercise() {\n    setIsRunning(true);\n  };\n  var stopExercise = function stopExercise() {\n    setIsRunning(false);\n  };\n  var resetExercise = function resetExercise() {\n    setIsRunning(false);\n    setCount(0);\n  };\n  return _jsxs(View, {\n    children: [_jsxs(Text, {\n      children: [\"Duration Exercise: \", exercise]\n    }), _jsxs(Text, {\n      children: [\"Count: \", count]\n    }), _jsx(Button, {\n      title: \"Start\",\n      onPress: startExercise,\n      disabled: isRunning\n    }), _jsx(Button, {\n      title: \"Stop\",\n      onPress: stopExercise,\n      disabled: !isRunning\n    }), _jsx(Button, {\n      title: \"Reset\",\n      onPress: resetExercise,\n      disabled: isRunning\n    })]\n  });\n}","map":{"version":3,"names":["React","useState","useEffect","View","Text","Button","jsxs","_jsxs","jsx","_jsx","DurationExercise","_ref","exercise","setMenuScreen","_useState","_useState2","_slicedToArray","count","setCount","_useState3","_useState4","isRunning","setIsRunning","interval","setInterval","prevCount","clearInterval","startExercise","stopExercise","resetExercise","children","title","onPress","disabled"],"sources":["/Users/savannahtaverner/github/unit2-2/lab9/components/DurationExercise.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { View, Text, Button } from 'react-native';\n\nexport default function DurationExercise({ exercise, setMenuScreen }) {\n  const [count, setCount] = useState(0);\n  const [isRunning, setIsRunning] = useState(false);\n\n  useEffect(() => {\n    let interval;\n    if (isRunning) {\n      interval = setInterval(() => {\n        setCount(prevCount => prevCount + 1);\n      }, 1000); // increment count every second\n    } else {\n      clearInterval(interval);\n    }\n\n    return () => clearInterval(interval); // cleanup interval\n  }, [isRunning]);\n\n  const startExercise = () => {\n    setIsRunning(true);\n  };\n\n  const stopExercise = () => {\n    setIsRunning(false);\n  };\n\n  const resetExercise = () => {\n    setIsRunning(false);\n    setCount(0);\n  };\n\n  return (\n    <View>\n      <Text>Duration Exercise: {exercise}</Text>\n      <Text>Count: {count}</Text>\n      <Button title=\"Start\" onPress={startExercise} disabled={isRunning} />\n      <Button title=\"Stop\" onPress={stopExercise} disabled={!isRunning} />\n      <Button title=\"Reset\" onPress={resetExercise} disabled={isRunning} />\n    </View>\n  );\n}\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,MAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAGnD,eAAe,SAASC,gBAAgBA,CAAAC,IAAA,EAA8B;EAAA,IAA3BC,QAAQ,GAAAD,IAAA,CAARC,QAAQ;IAAEC,aAAa,GAAAF,IAAA,CAAbE,aAAa;EAChE,IAAAC,SAAA,GAA0Bb,QAAQ,CAAC,CAAC,CAAC;IAAAc,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA9BG,KAAK,GAAAF,UAAA;IAAEG,QAAQ,GAAAH,UAAA;EACtB,IAAAI,UAAA,GAAkClB,QAAQ,CAAC,KAAK,CAAC;IAAAmB,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAA1CE,SAAS,GAAAD,UAAA;IAAEE,YAAY,GAAAF,UAAA;EAE9BlB,SAAS,CAAC,YAAM;IACd,IAAIqB,QAAQ;IACZ,IAAIF,SAAS,EAAE;MACbE,QAAQ,GAAGC,WAAW,CAAC,YAAM;QAC3BN,QAAQ,CAAC,UAAAO,SAAS;UAAA,OAAIA,SAAS,GAAG,CAAC;QAAA,EAAC;MACtC,CAAC,EAAE,IAAI,CAAC;IACV,CAAC,MAAM;MACLC,aAAa,CAACH,QAAQ,CAAC;IACzB;IAEA,OAAO;MAAA,OAAMG,aAAa,CAACH,QAAQ,CAAC;IAAA;EACtC,CAAC,EAAE,CAACF,SAAS,CAAC,CAAC;EAEf,IAAMM,aAAa,GAAG,SAAhBA,aAAaA,CAAA,EAAS;IAC1BL,YAAY,CAAC,IAAI,CAAC;EACpB,CAAC;EAED,IAAMM,YAAY,GAAG,SAAfA,YAAYA,CAAA,EAAS;IACzBN,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC;EAED,IAAMO,aAAa,GAAG,SAAhBA,aAAaA,CAAA,EAAS;IAC1BP,YAAY,CAAC,KAAK,CAAC;IACnBJ,QAAQ,CAAC,CAAC,CAAC;EACb,CAAC;EAED,OACEX,KAAA,CAACJ,IAAI;IAAA2B,QAAA,GACHvB,KAAA,CAACH,IAAI;MAAA0B,QAAA,GAAC,qBAAmB,EAAClB,QAAQ;IAAA,CAAO,CAAC,EAC1CL,KAAA,CAACH,IAAI;MAAA0B,QAAA,GAAC,SAAO,EAACb,KAAK;IAAA,CAAO,CAAC,EAC3BR,IAAA,CAACJ,MAAM;MAAC0B,KAAK,EAAC,OAAO;MAACC,OAAO,EAAEL,aAAc;MAACM,QAAQ,EAAEZ;IAAU,CAAE,CAAC,EACrEZ,IAAA,CAACJ,MAAM;MAAC0B,KAAK,EAAC,MAAM;MAACC,OAAO,EAAEJ,YAAa;MAACK,QAAQ,EAAE,CAACZ;IAAU,CAAE,CAAC,EACpEZ,IAAA,CAACJ,MAAM;MAAC0B,KAAK,EAAC,OAAO;MAACC,OAAO,EAAEH,aAAc;MAACI,QAAQ,EAAEZ;IAAU,CAAE,CAAC;EAAA,CACjE,CAAC;AAEX","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}