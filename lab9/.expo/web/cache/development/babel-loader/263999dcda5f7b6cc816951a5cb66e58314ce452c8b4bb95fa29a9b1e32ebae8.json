{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar RepetitionExercise = function RepetitionExercise(_ref) {\n  var navigation = _ref.navigation,\n    route = _ref.route;\n  var name = route.params.name;\n  var _useState = useState(0),\n    _useState2 = _slicedToArray(_useState, 2),\n    count = _useState2[0],\n    setCount = _useState2[1];\n  var incrementCount = function incrementCount() {\n    return setCount(count + 1);\n  };\n  var resetCount = function resetCount() {\n    return setCount(0);\n  };\n  var decrementCount = function decrementCount() {\n    return setCount(count - 1);\n  };\n  return _jsxs(View, {\n    children: [_jsx(Text, {\n      children: name\n    }), _jsxs(Text, {\n      children: [\"Count: \", count]\n    }), _jsx(Button, {\n      title: \"Increment\",\n      onPress: incrementCount\n    }), _jsx(Button, {\n      title: \"Reset\",\n      onPress: resetCount\n    }), _jsx(Button, {\n      title: \"Decrement\",\n      onPress: decrementCount\n    })]\n  });\n};\nexport default RepetitionExercise;","map":{"version":3,"names":["React","useState","View","Text","Button","jsx","_jsx","jsxs","_jsxs","RepetitionExercise","_ref","navigation","route","name","params","_useState","_useState2","_slicedToArray","count","setCount","incrementCount","resetCount","decrementCount","children","title","onPress"],"sources":["/Users/savannahtaverner/github/unit2-2/lab9/components/RepetitionExercise.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { View, Text, Button } from 'react-native';\n\nconst RepetitionExercise = ({ navigation, route }) => {\n  const { name } = route.params;\n\n  const [count, setCount] = useState(0);\n\n  const incrementCount = () => setCount(count + 1);\n\n  const resetCount = () => setCount(0);\n\n  const decrementCount = () => setCount(count - 1);\n\n  return (\n    <View>\n      <Text>{name}</Text>\n      <Text>Count: {count}</Text>\n      <Button title=\"Increment\" onPress={incrementCount} />\n      <Button title=\"Reset\" onPress={resetCount} />\n      <Button title=\"Decrement\" onPress={decrementCount} />\n    </View>\n  );\n};\n\nexport default RepetitionExercise;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,MAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAGxC,IAAMC,kBAAkB,GAAG,SAArBA,kBAAkBA,CAAAC,IAAA,EAA8B;EAAA,IAAxBC,UAAU,GAAAD,IAAA,CAAVC,UAAU;IAAEC,KAAK,GAAAF,IAAA,CAALE,KAAK;EAC7C,IAAQC,IAAI,GAAKD,KAAK,CAACE,MAAM,CAArBD,IAAI;EAEZ,IAAAE,SAAA,GAA0Bd,QAAQ,CAAC,CAAC,CAAC;IAAAe,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA9BG,KAAK,GAAAF,UAAA;IAAEG,QAAQ,GAAAH,UAAA;EAEtB,IAAMI,cAAc,GAAG,SAAjBA,cAAcA,CAAA;IAAA,OAASD,QAAQ,CAACD,KAAK,GAAG,CAAC,CAAC;EAAA;EAEhD,IAAMG,UAAU,GAAG,SAAbA,UAAUA,CAAA;IAAA,OAASF,QAAQ,CAAC,CAAC,CAAC;EAAA;EAEpC,IAAMG,cAAc,GAAG,SAAjBA,cAAcA,CAAA;IAAA,OAASH,QAAQ,CAACD,KAAK,GAAG,CAAC,CAAC;EAAA;EAEhD,OACEV,KAAA,CAACN,IAAI;IAAAqB,QAAA,GACHjB,IAAA,CAACH,IAAI;MAAAoB,QAAA,EAAEV;IAAI,CAAO,CAAC,EACnBL,KAAA,CAACL,IAAI;MAAAoB,QAAA,GAAC,SAAO,EAACL,KAAK;IAAA,CAAO,CAAC,EAC3BZ,IAAA,CAACF,MAAM;MAACoB,KAAK,EAAC,WAAW;MAACC,OAAO,EAAEL;IAAe,CAAE,CAAC,EACrDd,IAAA,CAACF,MAAM;MAACoB,KAAK,EAAC,OAAO;MAACC,OAAO,EAAEJ;IAAW,CAAE,CAAC,EAC7Cf,IAAA,CAACF,MAAM;MAACoB,KAAK,EAAC,WAAW;MAACC,OAAO,EAAEH;IAAe,CAAE,CAAC;EAAA,CACjD,CAAC;AAEX,CAAC;AAED,eAAeb,kBAAkB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}