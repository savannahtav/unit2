{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport { StatusBar } from 'expo-status-bar';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { CheckBox, Text } from '@rneui/themed';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport * as Font from 'expo-font';\nimport * as React from 'react';\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport FontAwesome from '@expo/vector-icons/FontAwesome';\nimport { useState } from 'react';\nimport { Input, Button as RNButton, Text as RNText } from 'react-native-elements';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction cacheFonts(_x) {\n  return _cacheFonts.apply(this, arguments);\n}\nfunction _cacheFonts() {\n  _cacheFonts = _asyncToGenerator(function* (fonts) {\n    return fonts.map(function () {\n      var _ref7 = _asyncToGenerator(function* (font) {\n        return yield Font.loadAsync(font);\n      });\n      return function (_x2) {\n        return _ref7.apply(this, arguments);\n      };\n    }());\n  });\n  return _cacheFonts.apply(this, arguments);\n}\nvar initTasks = [{\n  description: \"Task 1\",\n  completed: true,\n  key: 1\n}, {\n  description: \"Task 2\",\n  completed: true,\n  key: 2\n}];\nvar Stack = createNativeStackNavigator();\nexport default function App() {\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Stack.Navigator, {\n      initialRouteName: \"Login\",\n      children: [_jsx(Stack.Screen, {\n        name: \"Todo List\",\n        component: TodoScreen\n      }), _jsx(Stack.Screen, {\n        name: \"Details\",\n        component: DetailsScreen\n      }), _jsx(Stack.Screen, {\n        name: \"Login\",\n        component: LoginScreen\n      }), _jsx(Stack.Screen, {\n        name: \"Registration\",\n        component: RegistrationScreen\n      })]\n    })\n  });\n}\nfunction LoginScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    username = _useState2[0],\n    setUsername = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var _useState5 = useState(\"\"),\n    _useState6 = _slicedToArray(_useState5, 2),\n    error = _useState6[0],\n    setError = _useState6[1];\n  var handleLogin = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      try {\n        var users = yield AsyncStorage.getItem('users');\n        if (users) {\n          var loginInfo = JSON.parse(users);\n          var foundUser = loginInfo.find(function (user) {\n            return user.username === username && user.password === password;\n          });\n          if (foundUser) {\n            navigation.navigate(\"Todo List\");\n            setError(\"\");\n          } else {\n            setError(\"Incorrect username or password\");\n          }\n        } else {\n          setError(\"No registered users found. Please register first.\");\n        }\n      } catch (error) {\n        console.error(\"Error retrieving login data: \", error);\n      }\n    });\n    return function handleLogin() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(StatusBar, {\n      style: \"auto\"\n    }), _jsxs(View, {\n      style: styles.formContainer,\n      children: [_jsx(Input, {\n        placeholder: \"Login\",\n        leftIcon: {\n          type: 'font-awesome',\n          name: 'user'\n        },\n        onChangeText: setUsername,\n        value: username,\n        testID: \"login-username\"\n      }), _jsx(Input, {\n        placeholder: \"Password\",\n        leftIcon: {\n          type: 'font-awesome',\n          name: 'lock'\n        },\n        secureTextEntry: true,\n        onChangeText: setPassword,\n        value: password,\n        testID: \"login-password\"\n      }), _jsx(Button, {\n        title: \"Login\",\n        containerStyle: styles.buttonContainer,\n        buttonStyle: styles.loginButton,\n        onPress: handleLogin,\n        testID: \"login-button\"\n      }), _jsx(Button, {\n        title: \"Register\",\n        containerStyle: styles.buttonContainer,\n        buttonStyle: styles.registerButton,\n        onPress: function onPress() {\n          return navigation.navigate(\"Registration\");\n        },\n        testID: \"login-register\"\n      }), error ? _jsx(Text, {\n        style: styles.errorMessage,\n        children: error\n      }) : null]\n    })]\n  });\n}\nfunction RegistrationScreen(_ref3) {\n  var navigation = _ref3.navigation;\n  var _useState7 = useState(\"\"),\n    _useState8 = _slicedToArray(_useState7, 2),\n    firstName = _useState8[0],\n    setFirstName = _useState8[1];\n  var _useState9 = useState(\"\"),\n    _useState10 = _slicedToArray(_useState9, 2),\n    lastName = _useState10[0],\n    setLastName = _useState10[1];\n  var _useState11 = useState(\"\"),\n    _useState12 = _slicedToArray(_useState11, 2),\n    username = _useState12[0],\n    setUsername = _useState12[1];\n  var _useState13 = useState(\"\"),\n    _useState14 = _slicedToArray(_useState13, 2),\n    phoneNumber = _useState14[0],\n    setPhoneNumber = _useState14[1];\n  var _useState15 = useState(\"\"),\n    _useState16 = _slicedToArray(_useState15, 2),\n    password = _useState16[0],\n    setPassword = _useState16[1];\n  var _useState17 = useState(\"\"),\n    _useState18 = _slicedToArray(_useState17, 2),\n    confirmPassword = _useState18[0],\n    setConfirmPassword = _useState18[1];\n  var _useState19 = useState(\"\"),\n    _useState20 = _slicedToArray(_useState19, 2),\n    email = _useState20[0],\n    setEmail = _useState20[1];\n  var _useState21 = useState(\"\"),\n    _useState22 = _slicedToArray(_useState21, 2),\n    zipCode = _useState22[0],\n    setZipCode = _useState22[1];\n  var _useState23 = useState(false),\n    _useState24 = _slicedToArray(_useState23, 2),\n    newsletter = _useState24[0],\n    setNewsletter = _useState24[1];\n  var _useState25 = useState(\"\"),\n    _useState26 = _slicedToArray(_useState25, 2),\n    error = _useState26[0],\n    setError = _useState26[1];\n  var _useState27 = useState(true),\n    _useState28 = _slicedToArray(_useState27, 2),\n    isRegisterButtonDisabled = _useState28[0],\n    setIsRegisterButtonDisabled = _useState28[1];\n  var validateFields = function validateFields() {\n    setIsRegisterButtonDisabled(!firstName || !lastName || !username || !phoneNumber || !password || !confirmPassword || !email || !zipCode);\n  };\n  var handleFirstNameChange = function handleFirstNameChange(text) {\n    if (!/^[^\\d=?\\\\/@#%^&*()]+$/.test(text)) {\n      setError(\"Error: First name must only include word or symbol characters, no numbers.\");\n    } else {\n      setError(\"\");\n    }\n    setFirstName(text);\n    validateFields();\n  };\n  var handleLastNameChange = function handleLastNameChange(text) {\n    if (!/^[^\\d=?\\\\/@#%^&*()]+$/.test(text)) {\n      setError(\"Error: Last name must only include word or symbol characters, no numbers.\");\n    } else {\n      setError(\"\");\n    }\n    setLastName(text);\n    validateFields();\n  };\n  var handleUsernameChange = function handleUsernameChange(text) {\n    setUsername(text);\n    validateFields();\n  };\n  var handlePhoneNumberChange = function handlePhoneNumberChange(text) {\n    if (!/^\\(\\d{3}\\) \\d{3}-\\d{4}$/.test(text)) {\n      setError(\"Error: Phone number must be exactly (xxx) xxx-xxxx and all digits.\");\n    } else {\n      setError(\"\");\n    }\n    setPhoneNumber(text);\n    validateFields();\n  };\n  var handleEmailChange = function handleEmailChange(text) {\n    var emailRegex = /(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9]))\\.){3}(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9])|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])/;\n    if (!emailRegex.test(text)) {\n      setError(\"Error: Invalid email format. Must include an '@' sign and at least one period following it.\");\n    } else {\n      setError(\"\");\n    }\n    setEmail(text);\n    validateFields();\n  };\n  var handlePasswordChange = function handlePasswordChange(text) {\n    var passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[^a-zA-Z\\d]).{8,}$/;\n    if (!passwordRegex.test(text)) {\n      setError(\"Error: Password must contain at least 8 characters, including uppercase, lowercase, numbers, and special characters.\");\n    } else {\n      setError(\"\");\n    }\n    setPassword(text);\n    validateFields();\n  };\n  var handleConfirmPasswordChange = function handleConfirmPasswordChange(text) {\n    if (text !== password) {\n      setError(\"Error: Passwords do not match.\");\n    } else {\n      setError(\"\");\n    }\n    setConfirmPassword(text);\n    validateFields();\n  };\n  var handleZipCodeChange = function handleZipCodeChange(text) {\n    if (!/^\\d{5}$/.test(text)) {\n      setError(\"Error: ZIP Code must include 5 digits.\");\n    } else {\n      setError(\"\");\n    }\n    setZipCode(text);\n    validateFields();\n  };\n  var handleNewsletterChange = function handleNewsletterChange(value) {\n    setNewsletter(value);\n  };\n  var handleRegister = function () {\n    var _ref4 = _asyncToGenerator(function* () {\n      if (!firstName || !lastName || !username || !phoneNumber || !password || !confirmPassword || !email || !zipCode) {\n        setError(\"Please fill in all fields\");\n        return;\n      }\n      if (password !== confirmPassword) {\n        setError(\"Passwords do not match\");\n        return;\n      }\n      var users = [];\n      try {\n        var existingData = yield AsyncStorage.getItem('users');\n        if (existingData) {\n          users = JSON.parse(existingData);\n        }\n      } catch (error) {\n        console.error(\"Error retrieving user data:\", error);\n      }\n      var usernameExists = users.some(function (user) {\n        return user.username === username;\n      });\n      if (usernameExists) {\n        setError(\"Username already exists. Please choose a different one.\");\n        return;\n      }\n      var newUser = {\n        firstName: firstName,\n        lastName: lastName,\n        username: username,\n        phoneNumber: phoneNumber,\n        password: password,\n        email: email,\n        zipCode: zipCode,\n        newsletter: newsletter\n      };\n      users.push(newUser);\n      try {\n        yield AsyncStorage.setItem('users', JSON.stringify(users));\n        navigation.navigate(\"Login\");\n      } catch (error) {\n        console.error(\"Error saving user data:\", error);\n        setError(\"Error registering user\");\n      }\n    });\n    return function handleRegister() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(StatusBar, {\n      style: \"auto\"\n    }), _jsxs(View, {\n      style: styles.formContainer,\n      children: [_jsx(TextInput, {\n        onChangeText: handleFirstNameChange,\n        value: firstName,\n        placeholder: \"First Name\",\n        testID: \"firstname\"\n      }), _jsx(TextInput, {\n        onChangeText: handleLastNameChange,\n        value: lastName,\n        placeholder: \"Last Name\",\n        testID: \"lastname\"\n      }), _jsx(TextInput, {\n        onChangeText: handleUsernameChange,\n        value: username,\n        placeholder: \"Username\",\n        testID: \"username\"\n      }), _jsx(TextInput, {\n        onChangeText: handlePhoneNumberChange,\n        value: phoneNumber,\n        placeholder: \"Phone Number (e.g., (xxx) xxx-xxxx)\",\n        testID: \"phonenumber\"\n      }), _jsx(TextInput, {\n        onChangeText: handleEmailChange,\n        value: email,\n        placeholder: \"Email\",\n        testID: \"email\"\n      }), _jsx(TextInput, {\n        onChangeText: handlePasswordChange,\n        value: password,\n        placeholder: \"Password\",\n        secureTextEntry: true,\n        testID: \"password\"\n      }), _jsx(TextInput, {\n        onChangeText: handleConfirmPasswordChange,\n        value: confirmPassword,\n        placeholder: \"Confirm Password\",\n        secureTextEntry: true,\n        testID: \"confirmpassword\"\n      }), _jsx(TextInput, {\n        onChangeText: handleZipCodeChange,\n        value: zipCode,\n        placeholder: \"ZIP Code\",\n        test: true,\n        ID: \"zip\"\n      }), _jsx(CheckBox, {\n        title: \"Sign up for newsletter\",\n        checked: newsletter,\n        onPress: handleNewsletterChange,\n        testID: \"newsletter\"\n      }), _jsx(Button, {\n        title: \"Register\",\n        onPress: handleRegister,\n        disabled: isRegisterButtonDisabled,\n        testID: \"register-button\"\n      }), error ? _jsx(Text, {\n        style: styles.errorMessage,\n        children: error\n      }) : null]\n    })]\n  });\n}\nfunction DetailsScreen() {\n  return _jsx(View, {\n    style: {\n      flex: 1,\n      alignItems: \"center\",\n      justifyContent: \"center\"\n    },\n    children: _jsx(Text, {\n      children: \"Details Screen\"\n    })\n  });\n}\nfunction TodoScreen(_ref5) {\n  var navigation = _ref5.navigation;\n  cacheFonts([FontAwesome.font]);\n  var _useState29 = useState(initTasks),\n    _useState30 = _slicedToArray(_useState29, 2),\n    tasks = _useState30[0],\n    setTasks = _useState30[1];\n  var _useState31 = useState(\"\"),\n    _useState32 = _slicedToArray(_useState31, 2),\n    input = _useState32[0],\n    setInput = _useState32[1];\n  var updateTask = function updateTask(task) {\n    console.log(task);\n    task.completed = !task.completed;\n    setTasks(_toConsumableArray(tasks));\n  };\n  var addTask = function addTask() {\n    var maxKey = 0;\n    tasks.forEach(function (task) {\n      if (task.key > maxKey) {\n        maxKey = task.key;\n      }\n    });\n    setTasks([].concat(_toConsumableArray(tasks), [{\n      description: input,\n      completed: false,\n      key: maxKey + 1\n    }]));\n    console.log(tasks);\n    setInput(\"\");\n  };\n  var renderItem = function renderItem(_ref6) {\n    var item = _ref6.item;\n    return _jsxs(View, {\n      style: styles.horizontal,\n      children: [_jsx(CheckBox, {\n        textStyle: item.completed ? {\n          textDecorationLine: \"line-through\",\n          textDecorationStyle: \"solid\"\n        } : undefined,\n        title: item.description,\n        checked: item.completed,\n        onPress: function onPress() {\n          return updateTask(item);\n        }\n      }), _jsx(Button, {\n        title: \"Details\",\n        onPress: function onPress() {\n          return navigation.navigate(\"Details\");\n        }\n      })]\n    });\n  };\n  return _jsxs(View, {\n    style: [styles.container],\n    children: [_jsx(StatusBar, {\n      style: \"auto\"\n    }), _jsx(FlatList, {\n      data: tasks,\n      renderItem: renderItem\n    }), _jsxs(View, {\n      style: [styles.horizontal],\n      children: [_jsx(TextInput, {\n        onChangeText: setInput,\n        value: input,\n        placeholder: \"New task...\"\n      }), _jsx(Button, {\n        title: \"Add Task\",\n        onPress: addTask\n      })]\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  image: {\n    flex: 1,\n    aspectRatio: 1,\n    width: '50%',\n    backgroundColor: '#0553'\n  },\n  horizontal: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    padding: 10\n  },\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  button: {\n    alignItems: 'center',\n    backgroundColor: '#DDDDDD',\n    padding: 10\n  },\n  formContainer: {\n    width: '80%',\n    alignItems: 'center'\n  },\n  inputContainer: {\n    marginBottom: 15,\n    width: '100%'\n  },\n  input: {\n    borderWidth: 1,\n    borderColor: '#ddd',\n    borderRadius: 5,\n    paddingVertical: 10,\n    paddingHorizontal: 15,\n    fontSize: 16\n  },\n  buttonContainer: {\n    width: '100%',\n    marginVertical: 10\n  },\n  loginButton: {\n    backgroundColor: '#007bff'\n  },\n  registerButton: {\n    backgroundColor: '#28a745'\n  },\n  errorMessage: {\n    color: 'red',\n    marginTop: 10\n  }\n});","map":{"version":3,"names":["StatusBar","StyleSheet","View","CheckBox","Text","FlatList","TextInput","Button","Font","React","NavigationContainer","createNativeStackNavigator","FontAwesome","useState","Input","RNButton","RNText","AsyncStorage","jsx","_jsx","jsxs","_jsxs","cacheFonts","_x","_cacheFonts","apply","arguments","_asyncToGenerator","fonts","map","_ref7","font","loadAsync","_x2","initTasks","description","completed","key","Stack","App","children","Navigator","initialRouteName","Screen","name","component","TodoScreen","DetailsScreen","LoginScreen","RegistrationScreen","_ref","navigation","_useState","_useState2","_slicedToArray","username","setUsername","_useState3","_useState4","password","setPassword","_useState5","_useState6","error","setError","handleLogin","_ref2","users","getItem","loginInfo","JSON","parse","foundUser","find","user","navigate","console","style","styles","container","formContainer","placeholder","leftIcon","type","onChangeText","value","testID","secureTextEntry","title","containerStyle","buttonContainer","buttonStyle","loginButton","onPress","registerButton","errorMessage","_ref3","_useState7","_useState8","firstName","setFirstName","_useState9","_useState10","lastName","setLastName","_useState11","_useState12","_useState13","_useState14","phoneNumber","setPhoneNumber","_useState15","_useState16","_useState17","_useState18","confirmPassword","setConfirmPassword","_useState19","_useState20","email","setEmail","_useState21","_useState22","zipCode","setZipCode","_useState23","_useState24","newsletter","setNewsletter","_useState25","_useState26","_useState27","_useState28","isRegisterButtonDisabled","setIsRegisterButtonDisabled","validateFields","handleFirstNameChange","text","test","handleLastNameChange","handleUsernameChange","handlePhoneNumberChange","handleEmailChange","emailRegex","handlePasswordChange","passwordRegex","handleConfirmPasswordChange","handleZipCodeChange","handleNewsletterChange","handleRegister","_ref4","existingData","usernameExists","some","newUser","push","setItem","stringify","ID","checked","disabled","flex","alignItems","justifyContent","_ref5","_useState29","_useState30","tasks","setTasks","_useState31","_useState32","input","setInput","updateTask","task","log","_toConsumableArray","addTask","maxKey","forEach","concat","renderItem","_ref6","item","horizontal","textStyle","textDecorationLine","textDecorationStyle","undefined","data","create","image","aspectRatio","width","backgroundColor","flexDirection","padding","button","inputContainer","marginBottom","borderWidth","borderColor","borderRadius","paddingVertical","paddingHorizontal","fontSize","marginVertical","color","marginTop"],"sources":["/Users/savannahtaverner/github/unit2-1/lab8/App.js"],"sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport { StyleSheet, View } from 'react-native';\nimport { CheckBox, Text } from '@rneui/themed';\nimport { FlatList } from 'react-native'\nimport { TextInput, Button } from 'react-native';\nimport * as Font from 'expo-font'\nimport * as React from 'react'\nimport { NavigationContainer } from \"@react-navigation/native\"\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\"\nimport FontAwesome from '@expo/vector-icons/FontAwesome'\nimport { useState } from 'react'\nimport { Input, Button as RNButton, Text as RNText } from 'react-native-elements';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\n\nasync function cacheFonts(fonts) {\n  return fonts.map(async (font) => await Font.loadAsync(font))\n}\n\nlet initTasks = [\n  {description: \"Task 1\", completed: true, key: 1},\n  {description: \"Task 2\", completed: true, key: 2}\n]\n\nconst Stack = createNativeStackNavigator()\n\nexport default function App(){\n  return (\n    <NavigationContainer>\n      <Stack.Navigator initialRouteName=\"Login\">\n        <Stack.Screen name=\"Todo List\" component={TodoScreen} />\n        <Stack.Screen name=\"Details\" component={DetailsScreen} />\n        <Stack.Screen name=\"Login\" component={LoginScreen} />\n        <Stack.Screen name=\"Registration\" component={RegistrationScreen} />\n      </Stack.Navigator>\n    </NavigationContainer>\n  )\n}\n\n\nfunction LoginScreen({ navigation }) {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n\n  const handleLogin = async () => {\n    try {\n      const users = await AsyncStorage.getItem('users');\n      if (users) {\n        const loginInfo = JSON.parse(users);\n        const foundUser = loginInfo.find(user => user.username === username && user.password === password);\n        if (foundUser) {\n          navigation.navigate(\"Todo List\");\n          setError(\"\");\n        } else {\n          setError(\"Incorrect username or password\");\n        }\n      } else {\n        setError(\"No registered users found. Please register first.\");\n      }\n    } catch (error) {\n      console.error(\"Error retrieving login data: \", error);\n    }\n  };\n  \n  return (\n    <View style={styles.container}>\n      <StatusBar style=\"auto\" />\n      <View style={styles.formContainer}>\n        <Input\n          placeholder=\"Login\"\n          leftIcon={{ type: 'font-awesome', name: 'user' }}\n          onChangeText={setUsername}\n          value={username}\n          testID=\"login-username\"\n        />\n        <Input\n          placeholder=\"Password\"\n          leftIcon={{ type: 'font-awesome', name: 'lock' }}\n          secureTextEntry={true}\n          onChangeText={setPassword}\n          value={password}\n          testID=\"login-password\"\n        />\n        <Button\n          title=\"Login\"\n          containerStyle={styles.buttonContainer}\n          buttonStyle={styles.loginButton}\n          onPress={handleLogin}\n          testID=\"login-button\"\n        />\n        <Button\n          title=\"Register\"\n          containerStyle={styles.buttonContainer}\n          buttonStyle={styles.registerButton}\n          onPress={() => navigation.navigate(\"Registration\")}\n          testID=\"login-register\"\n        />\n        {error ? <Text style={styles.errorMessage}>{error}</Text> : null}\n      </View>\n    </View>\n  );\n}\n\n\nfunction RegistrationScreen({ navigation }) {\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [phoneNumber, setPhoneNumber] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [zipCode, setZipCode] = useState(\"\");\n  const [newsletter, setNewsletter] = useState(false);\n  const [error, setError] = useState(\"\");\n  const [isRegisterButtonDisabled, setIsRegisterButtonDisabled] = useState(true);\n\n  const validateFields = () => {\n    setIsRegisterButtonDisabled(\n      !firstName || !lastName || !username || !phoneNumber || !password || !confirmPassword || !email || !zipCode\n    );\n  };\n  \n  const handleFirstNameChange = (text) => {\n    if (!/^[^\\d=?\\\\/@#%^&*()]+$/.test(text)) {\n      setError(\"Error: First name must only include word or symbol characters, no numbers.\");\n    } else {\n      setError(\"\");\n    }\n    setFirstName(text);\n    validateFields();\n  };\n\n  const handleLastNameChange = (text) => {\n    if (!/^[^\\d=?\\\\/@#%^&*()]+$/.test(text)) {\n      setError(\"Error: Last name must only include word or symbol characters, no numbers.\");\n    } else {\n      setError(\"\");\n    }\n    setLastName(text);\n    validateFields();\n  };\n\n  const handleUsernameChange = (text) => {\n    setUsername(text);\n    validateFields();\n  };\n\n  const handlePhoneNumberChange = (text) => {\n    if (!/^\\(\\d{3}\\) \\d{3}-\\d{4}$/.test(text)) {\n      setError(\"Error: Phone number must be exactly (xxx) xxx-xxxx and all digits.\");\n    } else {\n      setError(\"\");\n    }\n    setPhoneNumber(text);\n    validateFields();\n  };\n\n  const handleEmailChange = (text) => {\n    const emailRegex = /(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9]))\\.){3}(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9])|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])/;\n    if (!emailRegex.test(text)) {\n      setError(\"Error: Invalid email format. Must include an '@' sign and at least one period following it.\");\n    } else {\n      setError(\"\");\n    }\n    setEmail(text);\n    validateFields();\n  };\n\n  const handlePasswordChange = (text) => {\n    const passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[^a-zA-Z\\d]).{8,}$/;\n    if (!passwordRegex.test(text)) {\n      setError(\"Error: Password must contain at least 8 characters, including uppercase, lowercase, numbers, and special characters.\");\n    } else {\n      setError(\"\");\n    }\n    setPassword(text);\n    validateFields();\n  };\n\n  const handleConfirmPasswordChange = (text) => {\n    if (text !== password) {\n      setError(\"Error: Passwords do not match.\");\n    } else {\n      setError(\"\");\n    }\n    setConfirmPassword(text);\n    validateFields();\n  };\n\n  const handleZipCodeChange = (text) => {\n    if (!/^\\d{5}$/.test(text)) {\n      setError(\"Error: ZIP Code must include 5 digits.\");\n    } else {\n      setError(\"\");\n    }\n    setZipCode(text);\n    validateFields();\n  };\n\n  const handleNewsletterChange = (value) => {\n    setNewsletter(value);\n  };\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  const handleRegister = async () => {\n    // Validate inputs\n    if (!firstName || !lastName || !username || !phoneNumber || !password || !confirmPassword || !email || !zipCode) {\n      setError(\"Please fill in all fields\");\n      return;\n    }\n\n    if (password !== confirmPassword) {\n      setError(\"Passwords do not match\");\n      return;\n    }\n\n // Retrieve existing user data or initialize it as an empty array\n let users = [];\n try {\n   const existingData = await AsyncStorage.getItem('users');\n   if (existingData) {\n     users = JSON.parse(existingData);\n   }\n } catch (error) {\n   console.error(\"Error retrieving user data:\", error);\n }\n\n // Check if the username is already taken\n const usernameExists = users.some(user => user.username === username);\n if (usernameExists) {\n   setError(\"Username already exists. Please choose a different one.\");\n   return;\n }\n\n // Add the new user to the array\n const newUser = {\n   firstName,\n   lastName,\n   username,\n   phoneNumber,\n   password,\n   email,\n   zipCode,\n   newsletter,\n };\n users.push(newUser);\n\n // Save the updated user data back to AsyncStorage\n try {\n   await AsyncStorage.setItem('users', JSON.stringify(users));\n   navigation.navigate(\"Login\");\n } catch (error) {\n   console.error(\"Error saving user data:\", error);\n   setError(\"Error registering user\");\n }\n};\n\n\n  return (\n    <View style={styles.container}>\n      <StatusBar style=\"auto\" />\n      <View style={styles.formContainer}>\n        <TextInput\n          onChangeText={handleFirstNameChange}\n          value={firstName}\n          placeholder=\"First Name\"\n          testID=\"firstname\"\n        />\n        <TextInput\n          onChangeText={handleLastNameChange}\n          value={lastName}\n          placeholder=\"Last Name\"\n          testID=\"lastname\"\n        />\n        <TextInput\n          onChangeText={handleUsernameChange}\n          value={username}\n          placeholder=\"Username\"\n          testID=\"username\"\n        />\n        <TextInput\n          onChangeText={handlePhoneNumberChange}\n          value={phoneNumber}\n          placeholder=\"Phone Number (e.g., (xxx) xxx-xxxx)\"\n          testID=\"phonenumber\"\n        />\n        <TextInput\n          onChangeText={handleEmailChange}\n          value={email}\n          placeholder=\"Email\"\n          testID=\"email\"\n        />\n        <TextInput\n          onChangeText={handlePasswordChange}\n          value={password}\n          placeholder=\"Password\"\n          secureTextEntry={true}\n          testID=\"password\"\n        />\n        <TextInput\n          onChangeText={handleConfirmPasswordChange}\n          value={confirmPassword}\n          placeholder=\"Confirm Password\"\n          secureTextEntry={true}\n          testID=\"confirmpassword\"\n        />\n        <TextInput\n          onChangeText={handleZipCodeChange}\n          value={zipCode}\n          placeholder=\"ZIP Code\"\n          test ID=\"zip\"\n        />\n        <CheckBox\n          title=\"Sign up for newsletter\"\n          checked={newsletter}\n          onPress={handleNewsletterChange}\n          testID=\"newsletter\"\n        />\n        <Button\n          title=\"Register\"\n          onPress={handleRegister}\n          disabled={isRegisterButtonDisabled}\n          testID=\"register-button\"\n        />\n        {error ? <Text style={styles.errorMessage}>{error}</Text> : null}\n      </View>\n    </View>\n  );\n}\n\nfunction DetailsScreen() {\n  return (\n    <View style={{ flex:1, alignItems: \"center\", justifyContent: \"center\" }}>\n      <Text>Details Screen</Text>\n      </View>\n  )\n}\n\n\nfunction TodoScreen({navigation}) {\n  cacheFonts([FontAwesome.font])\n  let [tasks, setTasks] = useState(initTasks)\n  let [input, setInput] = useState(\"\")\n  let updateTask = (task) => {\n    console.log(task)\n    task.completed = !task.completed\n    setTasks([...tasks])\n  }\n  \n  let addTask = () => {\n    let maxKey = 0\n    tasks.forEach(task => {\n      if(task.key > maxKey) {\n        maxKey = task.key\n      }\n\n    })\n    setTasks([...tasks, {\n      description: input,\n      completed: false,\n      key: maxKey+1\n    }])\n    console.log(tasks)\n    setInput(\"\")\n  }\n\n  let renderItem = ({item}) => {\n    return (\n      <View style ={styles.horizontal}>\n    <CheckBox\n      textStyle={item.completed ? {\n        textDecorationLine: \"line-through\",\n        textDecorationStyle: \"solid\",\n      } : undefined}\n      title={item.description}\n      checked={item.completed}\n      onPress={() => updateTask(item)}\n      />\n      <Button title =\"Details\" onPress={() => navigation.navigate(\"Details\")}/>\n      </View>\n    );\n  };\n\n  return (\n    <View style={[styles.container]}>\n      <StatusBar style=\"auto\" />\n        <FlatList data={tasks} renderItem={renderItem} />\n        <View style={[styles.horizontal]}>\n      <TextInput\n        onChangeText={setInput}\n        value={input}\n        placeholder=\"New task...\"\n      ></TextInput>< Button title=\"Add Task\" onPress={addTask}/>\n        </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  image: {\n    flex: 1,\n    aspectRatio: 1,\n    width: '50%',\n    backgroundColor: '#0553',\n  },\n  horizontal: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    padding: 10,\n  },\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  button: {\n    alignItems: 'center',\n    backgroundColor: '#DDDDDD',\n    padding: 10,\n  },\n  formContainer: {\n    width: '80%',\n    alignItems: 'center',\n  },\n  inputContainer: {\n    marginBottom: 15,\n    width: '100%',\n  },\n  input: {\n    borderWidth: 1,\n    borderColor: '#ddd',\n    borderRadius: 5,\n    paddingVertical: 10,\n    paddingHorizontal: 15,\n    fontSize: 16,\n  },\n  buttonContainer: {\n    width: '100%',\n    marginVertical: 10,\n  },\n  loginButton: {\n    backgroundColor: '#007bff',\n  },\n  registerButton: {\n    backgroundColor: '#28a745',\n  },\n  errorMessage: {\n    color: 'red',\n    marginTop: 10,\n  },\n});"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}