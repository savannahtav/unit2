{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport { StatusBar } from 'expo-status-bar';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { CheckBox, Text } from '@rneui/themed';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport * as Font from 'expo-font';\nimport * as React from 'react';\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport FontAwesome from '@expo/vector-icons/FontAwesome';\nimport { useState } from 'react';\nimport { Input, Button as RNButton, Text as RNText } from 'react-native-elements';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction cacheFonts(_x) {\n  return _cacheFonts.apply(this, arguments);\n}\nfunction _cacheFonts() {\n  _cacheFonts = _asyncToGenerator(function* (fonts) {\n    return fonts.map(function () {\n      var _ref7 = _asyncToGenerator(function* (font) {\n        return yield Font.loadAsync(font);\n      });\n      return function (_x2) {\n        return _ref7.apply(this, arguments);\n      };\n    }());\n  });\n  return _cacheFonts.apply(this, arguments);\n}\nvar initTasks = [{\n  description: \"Task 1\",\n  completed: true,\n  key: 1\n}, {\n  description: \"Task 2\",\n  completed: true,\n  key: 2\n}];\nvar Stack = createNativeStackNavigator();\nexport default function App() {\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Stack.Navigator, {\n      initialRouteName: \"Login\",\n      children: [_jsx(Stack.Screen, {\n        name: \"Todo List\",\n        component: TodoScreen\n      }), _jsx(Stack.Screen, {\n        name: \"Details\",\n        component: DetailsScreen\n      }), _jsx(Stack.Screen, {\n        name: \"Login\",\n        component: LoginScreen\n      }), _jsx(Stack.Screen, {\n        name: \"Registration\",\n        component: RegistrationScreen\n      })]\n    })\n  });\n}\nfunction LoginScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    username = _useState2[0],\n    setUsername = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var _useState5 = useState(\"\"),\n    _useState6 = _slicedToArray(_useState5, 2),\n    error = _useState6[0],\n    setError = _useState6[1];\n  var handleLogin = function handleLogin() {\n    if (username === \"test\" && password === \"Test1@\") {\n      navigation.navigate(\"Todo List\");\n      setError(\"\");\n    } else {\n      setError(\"Incorrect username or password\");\n    }\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(StatusBar, {\n      style: \"auto\"\n    }), _jsxs(View, {\n      style: styles.formContainer,\n      children: [_jsx(Input, {\n        placeholder: \"Login\",\n        leftIcon: {\n          type: 'font-awesome',\n          name: 'user'\n        },\n        onChangeText: setUsername,\n        value: username,\n        testID: \"login-username\"\n      }), _jsx(Input, {\n        placeholder: \"Password\",\n        leftIcon: {\n          type: 'font-awesome',\n          name: 'lock'\n        },\n        secureTextEntry: true,\n        onChangeText: setPassword,\n        value: password,\n        testID: \"login-password\"\n      }), _jsx(Button, {\n        title: \"Login\",\n        containerStyle: styles.buttonContainer,\n        buttonStyle: styles.loginButton,\n        onPress: handleLogin,\n        testID: \"login-button\"\n      }), _jsx(Button, {\n        title: \"Register\",\n        containerStyle: styles.buttonContainer,\n        buttonStyle: styles.registerButton,\n        onPress: function onPress() {\n          return navigation.navigate(\"Registration\");\n        },\n        testID: \"login-register\"\n      }), error ? _jsx(Text, {\n        style: styles.errorMessage,\n        children: error\n      }) : null]\n    })]\n  });\n}\nvar handleLogin = function () {\n  var _ref2 = _asyncToGenerator(function* () {\n    try {\n      var loginData = yield AsyncStorage.getItem('loginData');\n      if (loginData) {\n        var loginInfo = JSON.parse(loginData);\n        var foundUser = loginInfo.find(function (user) {\n          return user.username === username && user.password === password;\n        });\n        if (foundUser) {\n          navigation.navigate(\"Todo List\");\n          setError(\"\");\n        } else {\n          setError(\"Incorrect username or password\");\n        }\n      } else {\n        setError(\"No registered users found. Please register first.\");\n      }\n    } catch (error) {\n      console.error(\"Error retrieving login data: \", error);\n    }\n  });\n  return function handleLogin() {\n    return _ref2.apply(this, arguments);\n  };\n}();\nfunction RegistrationScreen(_ref3) {\n  var navigation = _ref3.navigation;\n  var _useState7 = useState(\"\"),\n    _useState8 = _slicedToArray(_useState7, 2),\n    firstName = _useState8[0],\n    setFirstName = _useState8[1];\n  var _useState9 = useState(\"\"),\n    _useState10 = _slicedToArray(_useState9, 2),\n    lastName = _useState10[0],\n    setLastName = _useState10[1];\n  var _useState11 = useState(\"\"),\n    _useState12 = _slicedToArray(_useState11, 2),\n    username = _useState12[0],\n    setUsername = _useState12[1];\n  var _useState13 = useState(\"\"),\n    _useState14 = _slicedToArray(_useState13, 2),\n    phoneNumber = _useState14[0],\n    setPhoneNumber = _useState14[1];\n  var _useState15 = useState(\"\"),\n    _useState16 = _slicedToArray(_useState15, 2),\n    password = _useState16[0],\n    setPassword = _useState16[1];\n  var _useState17 = useState(\"\"),\n    _useState18 = _slicedToArray(_useState17, 2),\n    confirmPassword = _useState18[0],\n    setConfirmPassword = _useState18[1];\n  var _useState19 = useState(\"\"),\n    _useState20 = _slicedToArray(_useState19, 2),\n    email = _useState20[0],\n    setEmail = _useState20[1];\n  var _useState21 = useState(\"\"),\n    _useState22 = _slicedToArray(_useState21, 2),\n    zipCode = _useState22[0],\n    setZipCode = _useState22[1];\n  var _useState23 = useState(false),\n    _useState24 = _slicedToArray(_useState23, 2),\n    newsletter = _useState24[0],\n    setNewsletter = _useState24[1];\n  var _useState25 = useState(\"\"),\n    _useState26 = _slicedToArray(_useState25, 2),\n    error = _useState26[0],\n    setError = _useState26[1];\n  var handleRegister = function () {\n    var _ref4 = _asyncToGenerator(function* () {\n      if (!firstName || !lastName || !username || !phoneNumber || !password || !confirmPassword || !email || !zipCode) {\n        setError(\"Please fill in all fields\");\n        return;\n      }\n      if (password !== confirmPassword) {\n        setError(\"Passwords do not match\");\n        return;\n      }\n      try {\n        yield AsyncStorage.setItem('user', JSON.stringify({\n          firstName: firstName,\n          lastName: lastName,\n          username: username,\n          phoneNumber: phoneNumber,\n          password: password,\n          email: email,\n          zipCode: zipCode,\n          newsletter: newsletter\n        }));\n        navigation.navigate(\"Login\");\n      } catch (e) {\n        console.error(\"Error saving user:\", e);\n        setError(\"Error registering user\");\n      }\n    });\n    return function handleRegister() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(StatusBar, {\n      style: \"auto\"\n    }), _jsxs(View, {\n      style: styles.formContainer,\n      children: [_jsx(TextInput, {\n        onChangeText: setFirstName,\n        value: firstName,\n        placeholder: \"First Name\",\n        testID: \"firstname\"\n      }), _jsx(TextInput, {\n        onChangeText: setLastName,\n        value: lastName,\n        placeholder: \"Last Name\",\n        testID: \"lastname\"\n      }), _jsx(TextInput, {\n        onChangeText: setUsername,\n        value: username,\n        placeholder: \"Username\",\n        testID: \"username\"\n      }), _jsx(TextInput, {\n        onChangeText: setPhoneNumber,\n        value: phoneNumber,\n        placeholder: \"Phone Number\",\n        testID: \"phonenumber\"\n      }), _jsx(TextInput, {\n        onChangeText: setPassword,\n        value: password,\n        placeholder: \"Password\",\n        secureTextEntry: true,\n        testID: \"password\"\n      }), _jsx(TextInput, {\n        onChangeText: setConfirmPassword,\n        value: confirmPassword,\n        placeholder: \"Confirm Password\",\n        secureTextEntry: true,\n        testID: \"confirmpassword\"\n      }), _jsx(TextInput, {\n        onChangeText: setEmail,\n        value: email,\n        placeholder: \"Email\",\n        testID: \"email\"\n      }), _jsx(TextInput, {\n        onChangeText: setZipCode,\n        value: zipCode,\n        placeholder: \"ZIP Code\",\n        testID: \"zip\"\n      }), _jsx(CheckBox, {\n        title: \"Sign up for newsletter\",\n        checked: newsletter,\n        onPress: function onPress() {\n          return setNewsletter(!newsletter);\n        },\n        testID: \"newsletter\"\n      }), _jsx(Button, {\n        title: \"Register\",\n        onPress: handleRegister,\n        testID: \"register-button\"\n      }), error ? _jsx(Text, {\n        style: styles.errorMessage,\n        children: error\n      }) : null]\n    })]\n  });\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(StatusBar, {\n      style: \"auto\"\n    }), _jsxs(View, {\n      style: styles.formContainer,\n      children: [_jsx(Input, {\n        label: \"First Name\",\n        onChangeText: setFirstName,\n        value: firstName,\n        testID: \"firstname\",\n        errorMessage: errors.firstName\n      }), _jsx(Button, {\n        title: \"Register\",\n        containerStyle: styles.buttonContainer,\n        buttonStyle: styles.registerButton,\n        onPress: handleRegister,\n        disabled: Object.values(errors).some(function (error) {\n          return error !== '';\n        }),\n        testID: \"register-button\"\n      })]\n    })]\n  });\n}\nfunction DetailsScreen() {\n  return _jsx(View, {\n    style: {\n      flex: 1,\n      alignItems: \"center\",\n      justifyContent: \"center\"\n    },\n    children: _jsx(Text, {\n      children: \"Details Screen\"\n    })\n  });\n}\nfunction TodoScreen(_ref5) {\n  var navigation = _ref5.navigation;\n  cacheFonts([FontAwesome.font]);\n  var _useState27 = useState(initTasks),\n    _useState28 = _slicedToArray(_useState27, 2),\n    tasks = _useState28[0],\n    setTasks = _useState28[1];\n  var _useState29 = useState(\"\"),\n    _useState30 = _slicedToArray(_useState29, 2),\n    input = _useState30[0],\n    setInput = _useState30[1];\n  var updateTask = function updateTask(task) {\n    console.log(task);\n    task.completed = !task.completed;\n    setTasks(_toConsumableArray(tasks));\n  };\n  var addTask = function addTask() {\n    var maxKey = 0;\n    tasks.forEach(function (task) {\n      if (task.key > maxKey) {\n        maxKey = task.key;\n      }\n    });\n    setTasks([].concat(_toConsumableArray(tasks), [{\n      description: input,\n      completed: false,\n      key: maxKey + 1\n    }]));\n    console.log(tasks);\n    setInput(\"\");\n  };\n  var renderItem = function renderItem(_ref6) {\n    var item = _ref6.item;\n    return _jsxs(View, {\n      style: styles.horizontal,\n      children: [_jsx(CheckBox, {\n        textStyle: item.completed ? {\n          textDecorationLine: \"line-through\",\n          textDecorationStyle: \"solid\"\n        } : undefined,\n        title: item.description,\n        checked: item.completed,\n        onPress: function onPress() {\n          return updateTask(item);\n        }\n      }), _jsx(Button, {\n        title: \"Details\",\n        onPress: function onPress() {\n          return navigation.navigate(\"Details\");\n        }\n      })]\n    });\n  };\n  return _jsxs(View, {\n    style: [styles.container],\n    children: [_jsx(StatusBar, {\n      style: \"auto\"\n    }), _jsx(FlatList, {\n      data: tasks,\n      renderItem: renderItem\n    }), _jsxs(View, {\n      style: [styles.horizontal],\n      children: [_jsx(TextInput, {\n        onChangeText: setInput,\n        value: input,\n        placeholder: \"New task...\"\n      }), _jsx(Button, {\n        title: \"Add Task\",\n        onPress: addTask\n      })]\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  image: {\n    flex: 1,\n    aspectRatio: 1,\n    width: '50%',\n    backgroundColor: '#0553'\n  },\n  horizontal: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    padding: 10\n  },\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  button: {\n    alignItems: 'center',\n    backgroundColor: '#DDDDDD',\n    padding: 10\n  },\n  formContainer: {\n    width: '80%',\n    alignItems: 'center'\n  },\n  buttonContainer: {\n    width: '100%',\n    marginVertical: 10\n  },\n  loginButton: {\n    backgroundColor: '#007bff'\n  },\n  registerButton: {\n    backgroundColor: '#28a745'\n  },\n  errorMessage: {\n    color: 'red',\n    marginTop: 10\n  }\n});","map":{"version":3,"names":["StatusBar","StyleSheet","View","CheckBox","Text","FlatList","TextInput","Button","Font","React","NavigationContainer","createNativeStackNavigator","FontAwesome","useState","Input","RNButton","RNText","AsyncStorage","jsx","_jsx","jsxs","_jsxs","cacheFonts","_x","_cacheFonts","apply","arguments","_asyncToGenerator","fonts","map","_ref7","font","loadAsync","_x2","initTasks","description","completed","key","Stack","App","children","Navigator","initialRouteName","Screen","name","component","TodoScreen","DetailsScreen","LoginScreen","RegistrationScreen","_ref","navigation","_useState","_useState2","_slicedToArray","username","setUsername","_useState3","_useState4","password","setPassword","_useState5","_useState6","error","setError","handleLogin","navigate","style","styles","container","formContainer","placeholder","leftIcon","type","onChangeText","value","testID","secureTextEntry","title","containerStyle","buttonContainer","buttonStyle","loginButton","onPress","registerButton","errorMessage","_ref2","loginData","getItem","loginInfo","JSON","parse","foundUser","find","user","console","_ref3","_useState7","_useState8","firstName","setFirstName","_useState9","_useState10","lastName","setLastName","_useState11","_useState12","_useState13","_useState14","phoneNumber","setPhoneNumber","_useState15","_useState16","_useState17","_useState18","confirmPassword","setConfirmPassword","_useState19","_useState20","email","setEmail","_useState21","_useState22","zipCode","setZipCode","_useState23","_useState24","newsletter","setNewsletter","_useState25","_useState26","handleRegister","_ref4","setItem","stringify","e","checked","label","errors","disabled","Object","values","some","flex","alignItems","justifyContent","_ref5","_useState27","_useState28","tasks","setTasks","_useState29","_useState30","input","setInput","updateTask","task","log","_toConsumableArray","addTask","maxKey","forEach","concat","renderItem","_ref6","item","horizontal","textStyle","textDecorationLine","textDecorationStyle","undefined","data","create","image","aspectRatio","width","backgroundColor","flexDirection","padding","button","marginVertical","color","marginTop"],"sources":["/Users/savannahtaverner/github/unit2-1/lab8/App.js"],"sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport { StyleSheet, View } from 'react-native';\nimport { CheckBox, Text } from '@rneui/themed';\nimport { FlatList } from 'react-native'\nimport { TextInput, Button } from 'react-native';\nimport * as Font from 'expo-font'\nimport * as React from 'react'\nimport { NavigationContainer } from \"@react-navigation/native\"\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\"\nimport FontAwesome from '@expo/vector-icons/FontAwesome'\nimport { useState } from 'react'\nimport { Input, Button as RNButton, Text as RNText } from 'react-native-elements';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\n\nasync function cacheFonts(fonts) {\n  return fonts.map(async (font) => await Font.loadAsync(font))\n}\n\nlet initTasks = [\n  {description: \"Task 1\", completed: true, key: 1},\n  {description: \"Task 2\", completed: true, key: 2}\n]\n\nconst Stack = createNativeStackNavigator()\n\nexport default function App(){\n  return (\n    <NavigationContainer>\n      <Stack.Navigator initialRouteName=\"Login\">\n        <Stack.Screen name=\"Todo List\" component={TodoScreen} />\n        <Stack.Screen name=\"Details\" component={DetailsScreen} />\n        <Stack.Screen name=\"Login\" component={LoginScreen} />\n        <Stack.Screen name=\"Registration\" component={RegistrationScreen} />\n\n\n      </Stack.Navigator>\n    </NavigationContainer>\n  )\n}\n\n\nfunction LoginScreen({ navigation }) {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n\n  const handleLogin = () => {\n    // Check if username and password match the test data\n    if (username === \"test\" && password === \"Test1@\") {\n      // Navigate to the TODO screen if login is successful\n      navigation.navigate(\"Todo List\");\n      // Clear any previous error messages\n      setError(\"\");\n    } else {\n      // Display error message if login fails\n      setError(\"Incorrect username or password\");\n    }\n  };\n  \n  return (\n    <View style={styles.container}>\n      <StatusBar style=\"auto\" />\n      <View style={styles.formContainer}>\n        <Input\n          placeholder=\"Login\"\n          leftIcon={{ type: 'font-awesome', name: 'user' }}\n          onChangeText={setUsername}\n          value={username}\n          testID=\"login-username\"\n        />\n        <Input\n          placeholder=\"Password\"\n          leftIcon={{ type: 'font-awesome', name: 'lock' }}\n          secureTextEntry={true}\n          onChangeText={setPassword}\n          value={password}\n          testID=\"login-password\"\n        />\n        <Button\n          title=\"Login\"\n          containerStyle={styles.buttonContainer}\n          buttonStyle={styles.loginButton}\n          onPress={handleLogin}\n          testID=\"login-button\"\n        />\n        <Button\n          title=\"Register\"\n          containerStyle={styles.buttonContainer}\n          buttonStyle={styles.registerButton}\n          onPress={() => navigation.navigate(\"Registration\")}\n          testID=\"login-register\"\n        />\n        {error ? <Text style={styles.errorMessage}>{error}</Text> : null}\n      </View>\n    </View>\n  );\n}\n\n\n\nconst handleLogin = async () => {\n  try {\n    const loginData = await AsyncStorage.getItem('loginData');\n    if (loginData) {\n      const loginInfo = JSON.parse(loginData);\n      const foundUser = loginInfo.find(user => user.username === username && user.password === password);\n      if (foundUser) {\n        navigation.navigate(\"Todo List\");\n        setError(\"\");\n      } else {\n        setError(\"Incorrect username or password\");\n      }\n    } else {\n      setError(\"No registered users found. Please register first.\");\n    }\n  } catch (error) {\n    console.error(\"Error retrieving login data: \", error);\n  }\n};\n\nfunction RegistrationScreen({ navigation }) {\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [phoneNumber, setPhoneNumber] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [zipCode, setZipCode] = useState(\"\");\n  const [newsletter, setNewsletter] = useState(false);\n  const [error, setError] = useState(\"\");\n\n  const handleRegister = async () => {\n    // Validate inputs\n    if (!firstName || !lastName || !username || !phoneNumber || !password || !confirmPassword || !email || !zipCode) {\n      setError(\"Please fill in all fields\");\n      return;\n    }\n\n    if (password !== confirmPassword) {\n      setError(\"Passwords do not match\");\n      return;\n    }\n\n    // Add user to AsyncStorage\n    try {\n      await AsyncStorage.setItem('user', JSON.stringify({ firstName, lastName, username, phoneNumber, password, email, zipCode, newsletter }));\n      navigation.navigate(\"Login\");\n    } catch (e) {\n      console.error(\"Error saving user:\", e);\n      setError(\"Error registering user\");\n    }\n  };\n\n  return (\n    <View style={styles.container}>\n      <StatusBar style=\"auto\" />\n      <View style={styles.formContainer}>\n        <TextInput\n          onChangeText={setFirstName}\n          value={firstName}\n          placeholder=\"First Name\"\n          testID=\"firstname\"\n        />\n        <TextInput\n          onChangeText={setLastName}\n          value={lastName}\n          placeholder=\"Last Name\"\n          testID=\"lastname\"\n        />\n        <TextInput\n          onChangeText={setUsername}\n          value={username}\n          placeholder=\"Username\"\n          testID=\"username\"\n        />\n        <TextInput\n          onChangeText={setPhoneNumber}\n          value={phoneNumber}\n          placeholder=\"Phone Number\"\n          testID=\"phonenumber\"\n        />\n        <TextInput\n          onChangeText={setPassword}\n          value={password}\n          placeholder=\"Password\"\n          secureTextEntry={true}\n          testID=\"password\"\n        />\n        <TextInput\n          onChangeText={setConfirmPassword}\n          value={confirmPassword}\n          placeholder=\"Confirm Password\"\n          secureTextEntry={true}\n          testID=\"confirmpassword\"\n        />\n        <TextInput\n          onChangeText={setEmail}\n          value={email}\n          placeholder=\"Email\"\n          testID=\"email\"\n        />\n        <TextInput\n          onChangeText={setZipCode}\n          value={zipCode}\n          placeholder=\"ZIP Code\"\n          testID=\"zip\"\n        />\n        <CheckBox\n          title=\"Sign up for newsletter\"\n          checked={newsletter}\n          onPress={() => setNewsletter(!newsletter)}\n          testID=\"newsletter\"\n        />\n        <Button\n          title=\"Register\"\n          onPress={handleRegister}\n          testID=\"register-button\"\n        />\n        {error ? <Text style={styles.errorMessage}>{error}</Text> : null}\n      </View>\n    </View>\n  );\n\n  return (\n    <View style={styles.container}>\n      <StatusBar style=\"auto\" />\n      <View style={styles.formContainer}>\n        <Input\n          label=\"First Name\"\n          onChangeText={setFirstName}\n          value={firstName}\n          testID=\"firstname\"\n          errorMessage={errors.firstName}\n        />\n        {/* Add similar Input components for other fields */}\n        <Button\n          title=\"Register\"\n          containerStyle={styles.buttonContainer}\n          buttonStyle={styles.registerButton}\n          onPress={handleRegister}\n          disabled={Object.values(errors).some(error => error !== '')}\n          testID=\"register-button\"\n        />\n      </View>\n    </View>\n  );\n}\n\n\n\n\n\n\nfunction DetailsScreen() {\n  return (\n    <View style={{ flex:1, alignItems: \"center\", justifyContent: \"center\" }}>\n      <Text>Details Screen</Text>\n      </View>\n  )\n}\n\n\n\n\nfunction TodoScreen({navigation}) {\n  cacheFonts([FontAwesome.font])\n  let [tasks, setTasks] = useState(initTasks)\n  let [input, setInput] = useState(\"\")\n  let updateTask = (task) => {\n    console.log(task)\n    task.completed = !task.completed\n    setTasks([...tasks])\n  }\n  \n  let addTask = () => {\n    let maxKey = 0\n    tasks.forEach(task => {\n      if(task.key > maxKey) {\n        maxKey = task.key\n      }\n\n    })\n    setTasks([...tasks, {\n      description: input,\n      completed: false,\n      key: maxKey+1\n    }])\n    console.log(tasks)\n    setInput(\"\")\n  }\n\n  let renderItem = ({item}) => {\n    return (\n      <View style ={styles.horizontal}>\n    <CheckBox\n      textStyle={item.completed ? {\n        textDecorationLine: \"line-through\",\n        textDecorationStyle: \"solid\",\n      } : undefined}\n      title={item.description}\n      checked={item.completed}\n      onPress={() => updateTask(item)}\n      />\n      <Button title =\"Details\" onPress={() => navigation.navigate(\"Details\")}/>\n      </View>\n    )\n\n  }\n  return (\n    <View style={[styles.container]}>\n      <StatusBar style=\"auto\" />\n        <FlatList data={tasks} renderItem={renderItem} />\n        <View style={[styles.horizontal]}>\n      <TextInput\n        onChangeText={setInput}\n        value={input}\n        placeholder=\"New task...\"\n      ></TextInput>< Button title=\"Add Task\" onPress={addTask}/>\n        </View>\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  image: {\n    flex: 1,\n    aspectRatio: 1,\n    width: '50%',\n    backgroundColor: '#0553',\n  },\n  horizontal: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    padding: 10,\n  },\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  button: {\n    alignItems: 'center',\n    backgroundColor: '#DDDDDD',\n    padding: 10,\n  },\n  formContainer: {\n    width: '80%',\n    alignItems: 'center',\n  },\n  buttonContainer: {\n    width: '100%',\n    marginVertical: 10,\n  },\n  loginButton: {\n    backgroundColor: '#007bff',\n  },\n  registerButton: {\n    backgroundColor: '#28a745',\n  },\n  errorMessage: {\n    color: 'red',\n    marginTop: 10,\n  },\n\n});\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}