{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport { StatusBar } from 'expo-status-bar';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { CheckBox, Text } from '@rneui/themed';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport * as Font from 'expo-font';\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport FontAwesome from '@expo/vector-icons/FontAwesome';\nimport { useState } from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction cacheFonts(_x) {\n  return _cacheFonts.apply(this, arguments);\n}\nfunction _cacheFonts() {\n  _cacheFonts = _asyncToGenerator(function* (fonts) {\n    return fonts.map(function () {\n      var _ref4 = _asyncToGenerator(function* (font) {\n        return yield Font.loadAsync(font);\n      });\n      return function (_x2) {\n        return _ref4.apply(this, arguments);\n      };\n    }());\n  });\n  return _cacheFonts.apply(this, arguments);\n}\nvar initTasks = [{\n  description: \"Task 1\",\n  completed: true,\n  key: 1\n}, {\n  description: \"Task 2\",\n  completed: true,\n  key: 2\n}];\nvar Stack = createNativeStackNavigator();\nexport default function App() {\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Stack.Navigator, {\n      initialRouteName: \"Todo List\",\n      children: [_jsx(Stack.Screen, {\n        name: \"Login\",\n        component: LoginScreen\n      }), _jsx(Stack.Screen, {\n        name: \"Todo List\",\n        component: TodoScreen\n      }), _jsx(Stack.Screen, {\n        name: \"Details\",\n        component: DetailsScreen\n      })]\n    })\n  });\n}\nfunction LoginScreen(_ref) {\n  var navigation = _ref.navigation;\n  cacheFonts([FontAwesome.font]);\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    username = _useState2[0],\n    setUsername = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var handleLogin = function handleLogin() {\n    navigation.navigate(\"Todo List\");\n  };\n  var handleRegister = function handleRegister() {\n    console.log(\"Register clicked\");\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(StatusBar, {\n      style: \"auto\"\n    }), _jsxs(View, {\n      style: styles.formContainer,\n      children: [_jsx(Input, {\n        placeholder: \"Login\",\n        leftIcon: {\n          type: 'font-awesome',\n          name: 'user'\n        },\n        onChangeText: setUsername,\n        value: username,\n        testID: \"login-username\"\n      }), _jsx(Input, {\n        placeholder: \"Password\",\n        leftIcon: {\n          type: 'font-awesome',\n          name: 'lock'\n        },\n        secureTextEntry: true,\n        onChangeText: setPassword,\n        value: password,\n        testID: \"login-password\"\n      }), _jsx(Button, {\n        title: \"Login\",\n        containerStyle: styles.buttonContainer,\n        buttonStyle: styles.loginButton,\n        onPress: handleLogin,\n        testID: \"login-button\"\n      }), _jsx(Button, {\n        title: \"Register\",\n        containerStyle: styles.buttonContainer,\n        buttonStyle: styles.registerButton,\n        onPress: handleRegister,\n        testID: \"login-register\"\n      })]\n    })]\n  });\n}\nfunction DetailsScreen() {\n  return _jsx(View, {\n    style: {\n      flex: 1,\n      alignItems: \"center\",\n      justifyContent: \"center\"\n    },\n    children: _jsx(Text, {\n      children: \"Details Screen\"\n    })\n  });\n}\nfunction TodoScreen(_ref2) {\n  var navigation = _ref2.navigation;\n  cacheFonts([FontAwesome.font]);\n  var _useState5 = useState(initTasks),\n    _useState6 = _slicedToArray(_useState5, 2),\n    tasks = _useState6[0],\n    setTasks = _useState6[1];\n  var _useState7 = useState(\"\"),\n    _useState8 = _slicedToArray(_useState7, 2),\n    input = _useState8[0],\n    setInput = _useState8[1];\n  var updateTask = function updateTask(task) {\n    console.log(task);\n    task.completed = !task.completed;\n    setTasks(_toConsumableArray(tasks));\n  };\n  var addTask = function addTask() {\n    var maxKey = 0;\n    tasks.forEach(function (task) {\n      if (task.key > maxKey) {\n        maxKey = task.key;\n      }\n    });\n    setTasks([].concat(_toConsumableArray(tasks), [{\n      description: input,\n      completed: false,\n      key: maxKey + 1\n    }]));\n    console.log(tasks);\n    setInput(\"\");\n  };\n  var renderItem = function renderItem(_ref3) {\n    var item = _ref3.item;\n    return _jsxs(View, {\n      style: styles.horizontal,\n      children: [_jsx(CheckBox, {\n        textStyle: item.completed ? {\n          textDecorationLine: \"line-through\",\n          textDecorationStyle: \"solid\"\n        } : undefined,\n        title: item.description,\n        checked: item.completed,\n        onPress: function onPress() {\n          return updateTask(item);\n        }\n      }), _jsx(Button, {\n        title: \"Details\",\n        onPress: function onPress() {\n          return navigation.navigate(\"Details\");\n        }\n      })]\n    });\n  };\n  return _jsxs(View, {\n    style: [styles.container],\n    children: [_jsx(StatusBar, {\n      style: \"auto\"\n    }), _jsx(FlatList, {\n      data: tasks,\n      renderItem: renderItem\n    }), _jsxs(View, {\n      style: [styles.horizontal],\n      children: [_jsx(TextInput, {\n        onChangeText: setInput,\n        value: input,\n        placeholder: \"New task...\"\n      }), _jsx(Button, {\n        title: \"Add Task\",\n        onPress: addTask\n      })]\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  image: {\n    flex: 1,\n    aspectRatio: 1,\n    width: '50%',\n    backgroundColor: '#0553'\n  },\n  horizontal: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    padding: 10\n  },\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  button: {\n    alignItems: 'center',\n    backgroundColor: '#DDDDDD',\n    padding: 10\n  }\n});","map":{"version":3,"names":["StatusBar","StyleSheet","View","CheckBox","Text","FlatList","TextInput","Button","Font","NavigationContainer","createNativeStackNavigator","FontAwesome","useState","jsx","_jsx","jsxs","_jsxs","cacheFonts","_x","_cacheFonts","apply","arguments","_asyncToGenerator","fonts","map","_ref4","font","loadAsync","_x2","initTasks","description","completed","key","Stack","App","children","Navigator","initialRouteName","Screen","name","component","LoginScreen","TodoScreen","DetailsScreen","_ref","navigation","_useState","_useState2","_slicedToArray","username","setUsername","_useState3","_useState4","password","setPassword","handleLogin","navigate","handleRegister","console","log","style","styles","container","formContainer","Input","placeholder","leftIcon","type","onChangeText","value","testID","secureTextEntry","title","containerStyle","buttonContainer","buttonStyle","loginButton","onPress","registerButton","flex","alignItems","justifyContent","_ref2","_useState5","_useState6","tasks","setTasks","_useState7","_useState8","input","setInput","updateTask","task","_toConsumableArray","addTask","maxKey","forEach","concat","renderItem","_ref3","item","horizontal","textStyle","textDecorationLine","textDecorationStyle","undefined","checked","data","create","image","aspectRatio","width","backgroundColor","flexDirection","padding","button"],"sources":["/Users/savannahtaverner/github/unit2-1/lab8/App.js"],"sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport { StyleSheet, View } from 'react-native';\nimport { CheckBox, Text } from '@rneui/themed';\nimport { FlatList } from 'react-native'\nimport { TextInput, Button } from 'react-native';\nimport * as Font from 'expo-font'\nimport { NavigationContainer } from \"@react-navigation/native\"\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\"\nimport FontAwesome from '@expo/vector-icons/FontAwesome'\nimport { useState } from 'react'\n\nasync function cacheFonts(fonts) {\n  return fonts.map(async (font) => await Font.loadAsync(font))\n}\n\nlet initTasks = [\n  {description: \"Task 1\", completed: true, key: 1},\n  {description: \"Task 2\", completed: true, key: 2}\n]\n\nconst Stack = createNativeStackNavigator()\n\nexport default function App(){\n  return (\n    <NavigationContainer>\n      <Stack.Navigator initialRouteName=\"Todo List\">\n        <Stack.Screen name=\"Login\" component={LoginScreen} />\n        <Stack.Screen name=\"Todo List\" component={TodoScreen} />\n        <Stack.Screen name=\"Details\" component={DetailsScreen} />\n      </Stack.Navigator>\n    </NavigationContainer>\n  )\n}\n\n\nfunction LoginScreen({ navigation }) {\n  cacheFonts([FontAwesome.font]);\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const handleLogin = () => {\n    // Add your login logic here\n    navigation.navigate(\"Todo List\");\n  };\n  const handleRegister = () => {\n    // Add your register logic here\n    console.log(\"Register clicked\");\n  };\n\n  return (\n    <View style={styles.container}>\n      <StatusBar style=\"auto\" />\n      <View style={styles.formContainer}>\n        <Input\n          placeholder=\"Login\"\n          leftIcon={{ type: 'font-awesome', name: 'user' }}\n          onChangeText={setUsername}\n          value={username}\n          testID=\"login-username\"\n        />\n        <Input\n          placeholder=\"Password\"\n          leftIcon={{ type: 'font-awesome', name: 'lock' }}\n          secureTextEntry={true}\n          onChangeText={setPassword}\n          value={password}\n          testID=\"login-password\"\n        />\n        <Button\n          title=\"Login\"\n          containerStyle={styles.buttonContainer}\n          buttonStyle={styles.loginButton}\n          onPress={handleLogin}\n          testID=\"login-button\"\n        />\n        <Button\n          title=\"Register\"\n          containerStyle={styles.buttonContainer}\n          buttonStyle={styles.registerButton}\n          onPress={handleRegister}\n          testID=\"login-register\"\n        />\n      </View>\n    </View>\n  );\n}\n\n\nfunction DetailsScreen() {\n  return (\n    <View style={{ flex:1, alignItems: \"center\", justifyContent: \"center\" }}>\n      <Text>Details Screen</Text>\n      </View>\n  )\n}\n\n\nfunction TodoScreen({navigation}) {\n  cacheFonts([FontAwesome.font])\n  let [tasks, setTasks] = useState(initTasks)\n  let [input, setInput] = useState(\"\")\n  let updateTask = (task) => {\n    console.log(task)\n    task.completed = !task.completed\n    setTasks([...tasks])\n  }\n  \n  let addTask = () => {\n    let maxKey = 0\n    tasks.forEach(task => {\n      if(task.key > maxKey) {\n        maxKey = task.key\n      }\n\n    })\n    setTasks([...tasks, {\n      description: input,\n      completed: false,\n      key: maxKey+1\n    }])\n    console.log(tasks)\n    setInput(\"\")\n  }\n\n  let renderItem = ({item}) => {\n    return (\n      <View style ={styles.horizontal}>\n    <CheckBox\n      textStyle={item.completed ? {\n        textDecorationLine: \"line-through\",\n        textDecorationStyle: \"solid\",\n      } : undefined}\n      title={item.description}\n      checked={item.completed}\n      onPress={() => updateTask(item)}\n      />\n      <Button title =\"Details\" onPress={() => navigation.navigate(\"Details\")}/>\n      </View>\n    )\n\n  }\n  return (\n    <View style={[styles.container]}>\n      <StatusBar style=\"auto\" />\n        <FlatList data={tasks} renderItem={renderItem} />\n        <View style={[styles.horizontal]}>\n      <TextInput\n        onChangeText={setInput}\n        value={input}\n        placeholder=\"New task...\"\n      ></TextInput>< Button title=\"Add Task\" onPress={addTask}/>\n        </View>\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  image: {\n    flex: 1,\n    aspectRatio: 1,\n    width: '50%',\n    backgroundColor: '#0553',\n  },\n  horizontal: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    padding: 10,\n  },\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  button: {\n    alignItems: 'center',\n    backgroundColor: '#DDDDDD',\n    padding: 10,\n  },\n\n});\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}