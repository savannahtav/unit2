{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport { StatusBar } from 'expo-status-bar';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport * as Font from 'expo-font';\nimport * as React from 'react';\nimport { useState } from 'react';\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport FontAwesome from '@expo/vector-icons/FontAwesome';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction cacheFonts(_x) {\n  return _cacheFonts.apply(this, arguments);\n}\nfunction _cacheFonts() {\n  _cacheFonts = _asyncToGenerator(function* (fonts) {\n    yield Font.loadAsync(fonts);\n  });\n  return _cacheFonts.apply(this, arguments);\n}\nvar initTasks = [{\n  description: \"Task 1\",\n  completed: true,\n  key: 1\n}, {\n  description: \"Task 2\",\n  completed: true,\n  key: 2\n}];\nvar Stack = createNativeStackNavigator();\nexport default function App() {\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Stack.Navigator, {\n      initialRouteName: \"Login\",\n      children: [_jsx(Stack.Screen, {\n        name: \"Login\",\n        component: LoginScreen,\n        options: {\n          headerShown: false\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"Todo List\",\n        component: TodoScreen\n      }), _jsx(Stack.Screen, {\n        name: \"Details\",\n        component: DetailsScreen\n      })]\n    })\n  });\n}\nfunction DetailsScreen() {\n  return _jsx(View, {\n    style: {\n      flex: 1,\n      alignItems: \"center\",\n      justifyContent: \"center\"\n    },\n    children: _jsx(Text, {\n      children: \"Details Screen\"\n    })\n  });\n}\nfunction TodoScreen(_ref) {\n  var navigation = _ref.navigation;\n  cacheFonts([FontAwesome.font]);\n  var _useState = useState(initTasks),\n    _useState2 = _slicedToArray(_useState, 2),\n    tasks = _useState2[0],\n    setTasks = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    input = _useState4[0],\n    setInput = _useState4[1];\n  var updateTask = function updateTask(task) {\n    console.log(task);\n    task.completed = !task.completed;\n    setTasks(_toConsumableArray(tasks));\n  };\n  var addTask = function addTask() {\n    var maxKey = 0;\n    tasks.forEach(function (task) {\n      if (task.key > maxKey) {\n        maxKey = task.key;\n      }\n    });\n    setTasks([].concat(_toConsumableArray(tasks), [{\n      description: input,\n      completed: false,\n      key: maxKey + 1\n    }]));\n    console.log(tasks);\n    setInput(\"\");\n  };\n  var renderItem = function renderItem(_ref2) {\n    var item = _ref2.item;\n    return _jsxs(View, {\n      style: styles.horizontal,\n      children: [_jsx(CheckBox, {\n        textStyle: item.completed ? {\n          textDecorationLine: \"line-through\",\n          textDecorationStyle: \"solid\"\n        } : undefined,\n        title: item.description,\n        checked: item.completed,\n        onPress: function onPress() {\n          return updateTask(item);\n        }\n      }), _jsx(Button, {\n        title: \"Details\",\n        onPress: function onPress() {\n          return navigation.navigate(\"Details\");\n        }\n      })]\n    });\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(StatusBar, {\n      style: \"auto\"\n    }), _jsx(FlatList, {\n      data: tasks,\n      renderItem: renderItem\n    }), _jsxs(View, {\n      style: styles.horizontal,\n      children: [_jsx(TextInput, {\n        onChangeText: setInput,\n        value: input,\n        placeholder: \"New task...\"\n      }), _jsx(Button, {\n        title: \"Add Task\",\n        onPress: addTask\n      })]\n    })]\n  });\n}\nfunction LoginScreen(_ref3) {\n  var navigation = _ref3.navigation;\n  cacheFonts([FontAwesome.font]);\n  var _useState5 = useState(\"\"),\n    _useState6 = _slicedToArray(_useState5, 2),\n    username = _useState6[0],\n    setUsername = _useState6[1];\n  var _useState7 = useState(\"\"),\n    _useState8 = _slicedToArray(_useState7, 2),\n    password = _useState8[0],\n    setPassword = _useState8[1];\n  var handleLogin = function handleLogin() {\n    navigation.navigate(\"Todo List\");\n  };\n  var handleRegister = function handleRegister() {\n    console.log(\"Register clicked\");\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(StatusBar, {\n      style: \"auto\"\n    }), _jsxs(View, {\n      style: styles.formContainer,\n      children: [_jsx(Input, {\n        placeholder: \"Login\",\n        leftIcon: {\n          type: 'font-awesome',\n          name: 'user'\n        },\n        onChangeText: setUsername,\n        value: username,\n        testID: \"login-username\"\n      }), _jsx(Input, {\n        placeholder: \"Password\",\n        leftIcon: {\n          type: 'font-awesome',\n          name: 'lock'\n        },\n        secureTextEntry: true,\n        onChangeText: setPassword,\n        value: password,\n        testID: \"login-password\"\n      }), _jsx(Button, {\n        title: \"Login\",\n        containerStyle: styles.buttonContainer,\n        buttonStyle: styles.loginButton,\n        onPress: handleLogin,\n        testID: \"login-button\"\n      }), _jsx(Button, {\n        title: \"Register\",\n        containerStyle: styles.buttonContainer,\n        buttonStyle: styles.registerButton,\n        onPress: handleRegister,\n        testID: \"login-register\"\n      })]\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  formContainer: {\n    width: '80%',\n    alignItems: 'center'\n  },\n  buttonContainer: {\n    width: '100%',\n    marginVertical: 10\n  },\n  loginButton: {\n    backgroundColor: '#007bff'\n  },\n  registerButton: {\n    backgroundColor: '#28a745'\n  },\n  horizontal: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    padding: 10\n  }\n});","map":{"version":3,"names":["StatusBar","StyleSheet","View","TextInput","Button","Font","React","useState","NavigationContainer","createNativeStackNavigator","FontAwesome","jsx","_jsx","jsxs","_jsxs","cacheFonts","_x","_cacheFonts","apply","arguments","_asyncToGenerator","fonts","loadAsync","initTasks","description","completed","key","Stack","App","children","Navigator","initialRouteName","Screen","name","component","LoginScreen","options","headerShown","TodoScreen","DetailsScreen","style","flex","alignItems","justifyContent","Text","_ref","navigation","font","_useState","_useState2","_slicedToArray","tasks","setTasks","_useState3","_useState4","input","setInput","updateTask","task","console","log","_toConsumableArray","addTask","maxKey","forEach","concat","renderItem","_ref2","item","styles","horizontal","CheckBox","textStyle","textDecorationLine","textDecorationStyle","undefined","title","checked","onPress","navigate","container","FlatList","data","onChangeText","value","placeholder","_ref3","_useState5","_useState6","username","setUsername","_useState7","_useState8","password","setPassword","handleLogin","handleRegister","formContainer","Input","leftIcon","type","testID","secureTextEntry","containerStyle","buttonContainer","buttonStyle","loginButton","registerButton","create","backgroundColor","width","marginVertical","flexDirection","padding"],"sources":["/Users/savannahtaverner/github/unit2-1/lab8/App.js"],"sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport { StyleSheet, View } from 'react-native';\nimport { TextInput, Button } from 'react-native';\nimport * as Font from 'expo-font';\nimport * as React from 'react';\nimport { useState } from 'react';\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport FontAwesome from '@expo/vector-icons/FontAwesome';\n\nasync function cacheFonts(fonts) {\n  await Font.loadAsync(fonts);\n}\n\nlet initTasks = [\n  {description: \"Task 1\", completed: true, key: 1},\n  {description: \"Task 2\", completed: true, key: 2}\n];\n\nconst Stack = createNativeStackNavigator();\n\nexport default function App(){\n  return (\n    <NavigationContainer>\n      <Stack.Navigator initialRouteName=\"Login\">\n        <Stack.Screen name=\"Login\" component={LoginScreen} options={{ headerShown: false }} />\n        <Stack.Screen name=\"Todo List\" component={TodoScreen} />\n        <Stack.Screen name=\"Details\" component={DetailsScreen} />\n      </Stack.Navigator>\n    </NavigationContainer>\n  );\n}\n\nfunction DetailsScreen() {\n  return (\n    <View style={{ flex:1, alignItems: \"center\", justifyContent: \"center\" }}>\n      <Text>Details Screen</Text>\n    </View>\n  );\n}\n\nfunction TodoScreen({navigation}) {\n  cacheFonts([FontAwesome.font]);\n  let [tasks, setTasks] = useState(initTasks);\n  let [input, setInput] = useState(\"\");\n  let updateTask = (task) => {\n    console.log(task);\n    task.completed = !task.completed;\n    setTasks([...tasks]);\n  };\n  \n  let addTask = () => {\n    let maxKey = 0;\n    tasks.forEach(task => {\n      if(task.key > maxKey) {\n        maxKey = task.key;\n      }\n    });\n    setTasks([...tasks, {\n      description: input,\n      completed: false,\n      key: maxKey+1\n    }]);\n    console.log(tasks);\n    setInput(\"\");\n  };\n\n  let renderItem = ({item}) => {\n    return (\n      <View style={styles.horizontal}>\n        <CheckBox\n          textStyle={item.completed ? {\n            textDecorationLine: \"line-through\",\n            textDecorationStyle: \"solid\",\n          } : undefined}\n          title={item.description}\n          checked={item.completed}\n          onPress={() => updateTask(item)}\n        />\n        <Button title=\"Details\" onPress={() => navigation.navigate(\"Details\")}/>\n      </View>\n    );\n  };\n\n  return (\n    <View style={styles.container}>\n      <StatusBar style=\"auto\" />\n      <FlatList data={tasks} renderItem={renderItem} />\n      <View style={styles.horizontal}>\n        <TextInput\n          onChangeText={setInput}\n          value={input}\n          placeholder=\"New task...\"\n        />\n        <Button title=\"Add Task\" onPress={addTask}/>\n      </View>\n    </View>\n  );\n}\n\nfunction LoginScreen({ navigation }) {\n  cacheFonts([FontAwesome.font]);\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const handleLogin = () => {\n    // Add your login logic here\n    navigation.navigate(\"Todo List\");\n  };\n\n  const handleRegister = () => {\n    // Add your register logic here\n    console.log(\"Register clicked\");\n  };\n\n  return (\n    <View style={styles.container}>\n      <StatusBar style=\"auto\" />\n      <View style={styles.formContainer}>\n        <Input\n          placeholder=\"Login\"\n          leftIcon={{ type: 'font-awesome', name: 'user' }}\n          onChangeText={setUsername}\n          value={username}\n          testID=\"login-username\"\n        />\n        <Input\n          placeholder=\"Password\"\n          leftIcon={{ type: 'font-awesome', name: 'lock' }}\n          secureTextEntry={true}\n          onChangeText={setPassword}\n          value={password}\n          testID=\"login-password\"\n        />\n        <Button\n          title=\"Login\"\n          containerStyle={styles.buttonContainer}\n          buttonStyle={styles.loginButton}\n          onPress={handleLogin}\n          testID=\"login-button\"\n        />\n        <Button\n          title=\"Register\"\n          containerStyle={styles.buttonContainer}\n          buttonStyle={styles.registerButton}\n          onPress={handleRegister}\n          testID=\"login-register\"\n        />\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  formContainer: {\n    width: '80%',\n    alignItems: 'center',\n  },\n  buttonContainer: {\n    width: '100%',\n    marginVertical: 10,\n  },\n  loginButton: {\n    backgroundColor: '#007bff',\n  },\n  registerButton: {\n    backgroundColor: '#28a745',\n  },\n  horizontal: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    padding: 10,\n  },\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}